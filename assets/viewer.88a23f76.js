import{R as e,P as t,C as i,E as n,a as o,b as a,K as s,c as r,T as l,d as c,e as d,f as h,H as m,M as _,Q as p,g as u,S as f,h as g,i as T,j as v,O as C,I as E,k as x,l as S,B as b,m as y,n as D,o as I,V as A,p as P,q as R,r as w,W as M,s as F,t as O,u as H,v as N,w as z,D as L,x as k,y as B,z as U,A as W,F as G,G as V,J as Z,L as q,N as X,U as j,X as Y,Y as K,Z as Q,_ as J,$,a0 as ee,a1 as te}from"./cesium.d6b26a20.js";import{l as ie,o as ne,E as oe,p as ae,q as se,k as re,F as le,r as ce,w as de}from"./index.6ad6aa93.js";import{L as he,l as me,M as _e,N as pe,A as ue,z as fe,v as ge,a as Te}from"./utils.ad392e62.js";var ve=()=>{const e={};return e.promise=new Promise(((t,i)=>{e.resolve=t,e.reject=i})),e};const Ce=180/Math.PI,Ee=e=>e*Ce;function xe(e,{onMaxZoomReached:t,onMinZoomReached:n,onZoomAvailable:o}){this.maxZoomReached=!1,this.minZoomReached=!1,this.onMaxZoomReached=t,this.onMinZoomReached=n,this.onZoomAvailable=o,this.enableInputs=!0,this.enableTranslate=!0,this.enableZoom=!0,this.enableRotate=!0,this.enableTilt=!0,this.enableLook=!0,this.inertiaSpin=.9,this.inertiaTranslate=.9,this.inertiaZoom=.8,this.maximumMovementRatio=.1,this.bounceAnimationTime=3,this.minimumZoomDistance=1,this.maximumZoomDistance=Number.POSITIVE_INFINITY,this.translateEventTypes=a.LEFT_DRAG,this.zoomEventTypes=[a.RIGHT_DRAG,a.WHEEL,a.PINCH],this.rotateEventTypes=a.LEFT_DRAG,this.tiltEventTypes=[a.MIDDLE_DRAG,a.PINCH,{eventType:a.LEFT_DRAG,modifier:s.CTRL},{eventType:a.RIGHT_DRAG,modifier:s.CTRL}],this.lookEventTypes={eventType:a.LEFT_DRAG,modifier:s.SHIFT},this.minimumPickingTerrainHeight=15e4,this._minimumPickingTerrainHeight=this.minimumPickingTerrainHeight,this.minimumCollisionTerrainHeight=15e3,this._minimumCollisionTerrainHeight=this.minimumCollisionTerrainHeight,this.minimumTrackBallHeight=75e5,this._minimumTrackBallHeight=this.minimumTrackBallHeight,this.enableCollisionDetection=!0,this._scene=e,this._globe=void 0,this._ellipsoid=void 0,this._aggregator=new r(e.canvas),this._lastInertiaSpinMovement=void 0,this._lastInertiaZoomMovement=void 0,this._lastInertiaTranslateMovement=void 0,this._lastInertiaTiltMovement=void 0,this._inertiaDisablers={_lastInertiaZoomMovement:["_lastInertiaSpinMovement","_lastInertiaTranslateMovement","_lastInertiaTiltMovement"],_lastInertiaTiltMovement:["_lastInertiaSpinMovement","_lastInertiaTranslateMovement"]},this._tweens=new l,this._tween=void 0,this._horizontalRotationAxis=void 0,this._tiltCenterMousePosition=new c(-1,-1),this._tiltCenter=new i,this._rotateMousePosition=new c(-1,-1),this._rotateStartPosition=new i,this._strafeStartPosition=new i,this._strafeMousePosition=new c,this._strafeEndMousePosition=new c,this._zoomMouseStart=new c(-1,-1),this._zoomWorldPosition=new i,this._useZoomWorldPosition=!1,this._tiltCVOffMap=!1,this._looking=!1,this._rotating=!1,this._strafing=!1,this._zoomingOnVector=!1,this._zoomingUnderground=!1,this._rotatingZoom=!1,this._adjustedHeightForTerrain=!1,this._cameraUnderground=!1;var m=e.mapProjection;this._maxCoord=m.project(new d(Math.PI,h.PI_OVER_TWO)),this._zoomFactor=5,this._rotateFactor=void 0,this._rotateRateRangeAdjustment=void 0,this._maximumRotateRate=1.77,this._minimumRotateRate=2e-4,this._minimumZoomRate=20,this._maximumZoomRate=5906376272e3,this._minimumUndergroundPickDistance=2e3,this._maximumUndergroundPickDistance=1e4}function Se(e,t,i,n,o,a,s){var r=a[s];g(r)||(r=a[s]={startPosition:new c,endPosition:new c,motion:new c,inertiaEnabled:!0});var l,d=e.getButtonPressTime(t,i),m=e.getButtonReleaseTime(t,i),_=d&&m&&(m.getTime()-d.getTime())/1e3,p=new Date,u=m&&(p.getTime()-m.getTime())/1e3;if(d&&m&&_<.4){var f=function(e,t){if(e<0)return 0;var i=25*(1-t);return Math.exp(-i*e)}(u,n),T=e.getLastMovement(t,i);if(!g(T)||(l=T,c.equalsEpsilon(l.startPosition,l.endPosition,h.EPSILON14))||!r.inertiaEnabled)return;if(r.motion.x=.5*(T.endPosition.x-T.startPosition.x),r.motion.y=.5*(T.endPosition.y-T.startPosition.y),r.startPosition=c.clone(T.startPosition,r.startPosition),r.endPosition=c.multiplyByScalar(r.motion,f,r.endPosition),r.endPosition=c.add(r.startPosition,r.endPosition,r.endPosition),isNaN(r.endPosition.x)||isNaN(r.endPosition.y)||c.distance(r.startPosition,r.endPosition)<.5)return;if(!e.isButtonDown(t,i))o(a,e.getStartMousePosition(t,i),r)}}function be(e,t){if(g(t)){var i=e[t];g(i)&&(i.inertiaEnabled=!0);var n=e._inertiaDisablers[t];if(g(n))for(var o=n.length,a=0;a<o;++a)i=e[n[a]],g(i)&&(i.inertiaEnabled=!1)}}var ye=[];function De(e,t,i,n,o,a){if(g(i)){var s=e._aggregator;Array.isArray(i)||(ye[0]=i,i=ye);for(var r=i.length,l=0;l<r;++l){var c=i[l],d=g(c.eventType)?c.eventType:c,h=c.modifier,m=s.isMoving(d,h)&&s.getMovement(d,h),_=s.getStartMousePosition(d,h);e.enableInputs&&t&&(m?(n(e,_,m),be(e,a)):o<1&&Se(s,d,h,o,n,e,a))}}}var Ie=new e,Ae=new i,Pe=new c,Re=new i,we=new i,Me={orientation:new m};function Fe(e,t,n,o,a,s,r){var l=1;g(s)&&(l=h.clamp(Math.abs(s),.25,1));var d=n.endPosition.y-n.startPosition.y,m=d<0?0:e.minimumZoomDistance*l,_=e.maximumZoomDistance,p=o*(a-m);p=h.clamp(p,e._minimumZoomRate,e._maximumZoomRate);var u=d/e._scene.canvas.clientHeight,T=p*(u=Math.min(u,e.maximumMovementRatio));if(e.enableCollisionDetection||0===e.minimumZoomDistance||!g(e._globe)){if(T>0&&Math.abs(a-m)<1)return void(e.maxZoomReached||(e.onMaxZoomReached&&e.onMaxZoomReached(),e.maxZoomReached=!0));if(T<0&&Math.abs(a-_)<1)return void(e.minZoomReached||(e.onMinZoomReached&&e.onMinZoomReached(),e.minZoomReached=!0));a-T<m?T=a-m-1:a-T>_&&(T=a-_)}var E=e._scene,x=E.camera,S=E.mode,b=Me.orientation;if(b.heading=x.heading,b.pitch=x.pitch,b.roll=x.roll,x.frustum instanceof C)Math.abs(T)>0&&(x.zoomIn(T),x._adjustOrthographicFrustum());else{var y,D=c.equals(t,e._zoomMouseStart),I=e._zoomingOnVector,A=e._rotatingZoom;if(D||(e._zoomMouseStart=c.clone(t,e._zoomMouseStart),g(e._globe)&&(y=r||ze(e,t,Ae)),g(y)?(e._useZoomWorldPosition=!0,e._zoomWorldPosition=i.clone(y,e._zoomWorldPosition)):e._useZoomWorldPosition=!1,I=e._zoomingOnVector=!1,A=e._rotatingZoom=!1,e._zoomingUnderground=e._cameraUnderground),e._useZoomWorldPosition){var P=S===f.COLUMBUS_VIEW;if(x.positionCartographic.height<2e6&&(A=!0),!D||A){if(S===f.SCENE2D){var R=e._zoomWorldPosition,w=x.position;if(!i.equals(R,w)&&x.positionCartographic.height<2*e._maxCoord.x){var M=x.position.x,F=i.subtract(R,w,Re);i.normalize(F,F);var O=i.distance(R,w)*T/(.5*x.getMagnitude());x.move(F,.5*O),(x.position.x<0&&M>0||x.position.x>0&&M<0)&&(y=x.getPickRay(t,Ie).origin,y=i.fromElements(y.y,y.z,y.x),e._zoomWorldPosition=i.clone(y,e._zoomWorldPosition))}}else if(r||S===f.SCENE3D){var H=i.normalize(x.position,we);P=(e._cameraUnderground||e._zoomingUnderground||x.positionCartographic.height<3e3&&Math.abs(i.dot(x.direction,H)),!0)}e._rotatingZoom=!P}if(!D&&P||I){var N=v.wgs84ToWindowCoordinates(E,e._zoomWorldPosition,Pe),z=(S!==f.COLUMBUS_VIEW&&c.equals(t,e._zoomMouseStart)&&g(N)?x.getPickRay(N,Ie):x.getPickRay(t,Ie)).direction;S!==f.COLUMBUS_VIEW&&S!==f.SCENE2D||i.fromElements(z.y,z.z,z.x,z),x.move(z,T),e._zoomingOnVector=!0}else x.zoomIn(T);e._cameraUnderground||x.setView(Me)}else x.zoomIn(T)}}var Oe=new e,He=new i,Ne=new i;function ze(e,t,n){var o=e._scene,a=e._globe,s=o.camera;if(g(a)){var r,l=!e._cameraUnderground;o.pickPositionSupported&&(r=o.pickPositionWorldCoordinates(t,He));var c=s.getPickRay(t,Oe),d=a.pickWorldCoordinates(c,o,l,Ne);return(g(r)?i.distance(r,s.positionWC):Number.POSITIVE_INFINITY)<(g(d)?i.distance(d,s.positionWC):Number.POSITIVE_INFINITY)?i.clone(r,n):i.clone(d,n)}}var Le=new d;function ke(e){var t=e._ellipsoid,i=e._scene,n=i.camera,o=0;if(i.mode===f.SCENE3D){var a=t.cartesianToCartographic(n.position,Le);g(a)&&(o=a.height)}else o=n.position.z;var s=S(e._scene.globeHeight,0);return Math.abs(s-o)}var Be=new i;function Ue(t,n,o,a){var s=i.distance(n.origin,o),r=ke(t);return s>h.clamp(5*r,t._minimumUndergroundPickDistance,t._maximumUndergroundPickDistance)&&(s=Math.min(s,r/5),s=Math.max(s,100)),e.getPoint(n,s,a)}function We(t,n,o,a){var s;return g(o)?(s=i.distance(n.origin,o))>t._maximumUndergroundPickDistance&&(s=ke(t)):s=ke(t),e.getPoint(n,s,a)}var Ge=new c;function Ve(e,t){var i=t.endPosition,n=c.subtract(t.endPosition,t.startPosition,Ge),o=e._strafeEndMousePosition;c.add(o,n,o),t.endPosition=o,yt(e,t,e._strafeStartPosition),t.endPosition=i}var Ze=new e,qe=new e,Xe=new i,je=new i,Ye=new i,Ke=new i,Qe=new t(i.UNIT_X,0),Je=new c,$e=new c;function et(e,n,o){if(i.equals(n,e._translateMousePosition)||(e._looking=!1),i.equals(n,e._strafeMousePosition)||(e._strafing=!1),e._looking)hi(e,n,o);else if(e._strafing)Ve(e,o);else{var a,s=e._scene.camera,r=e._cameraUnderground,l=c.clone(o.startPosition,Je),d=c.clone(o.endPosition,$e),m=s.getPickRay(l,Ze),_=i.clone(i.ZERO,Ke),p=i.UNIT_X;if(s.position.z<e._minimumPickingTerrainHeight&&(a=ze(e,l,Xe),g(a)&&(_.x=a.x)),r||_.x>s.position.z&&g(a)){var u=a;return r&&(u=We(e,m,a,Xe)),c.clone(n,e._strafeMousePosition),c.clone(n,e._strafeEndMousePosition),i.clone(u,e._strafeStartPosition),e._strafing=!0,void yt(e,o,e._strafeStartPosition)}var f=t.fromPointNormal(_,p,Qe);m=s.getPickRay(l,Ze);var T=E.rayPlane(m,f,Xe),v=s.getPickRay(d,qe),C=E.rayPlane(v,f,je);if(!g(T)||!g(C))return e._looking=!0,hi(e,n,o),void c.clone(n,e._translateMousePosition);var x=i.subtract(T,C,Ye),S=x.x;x.x=x.y,x.y=x.z,x.z=S;var b=i.magnitude(x);b>h.EPSILON6&&(i.normalize(x,x),s.move(x,b))}}var tt=new c,it=new e,nt=new i,ot=new i,at=new _,st=new _,rt=new i,lt=new t(i.UNIT_X,0),ct=new i,dt=new d,ht=new _,mt=new p,_t=new u,pt=new i;function ut(e,o,a){if(g(a.angleAndHeight)&&(a=a.angleAndHeight),c.equals(o,e._tiltCenterMousePosition)||(e._tiltCVOffMap=!1,e._looking=!1),e._looking)hi(e,o,a);else{var s=e._scene.camera;e._tiltCVOffMap||!e.onMap()||Math.abs(s.position.z)>e._minimumPickingTerrainHeight?(e._tiltCVOffMap=!0,function(e,t,o){var a=e._scene,s=a.camera,r=a.canvas,l=tt;l.x=r.clientWidth/2,l.y=r.clientHeight/2;var d,m=s.getPickRay(l,it),p=i.UNIT_X,u=m.origin,f=m.direction,T=i.dot(p,f);Math.abs(T)>h.EPSILON6&&(d=-i.dot(p,u)/T);if(!g(d)||d<=0)return e._looking=!0,hi(e,t,o),void c.clone(t,e._tiltCenterMousePosition);var v=i.multiplyByScalar(f,d,nt);i.add(u,v,v);var C=a.mapProjection,E=C.ellipsoid;i.fromElements(v.y,v.z,v.x,v);var S=C.unproject(v,dt);E.cartographicToCartesian(S,v);var b=x.eastNorthUpToFixedFrame(v,E,at),y=e._globe,D=e._ellipsoid;e._globe=void 0,e._ellipsoid=n.UNIT_SPHERE,e._rotateFactor=1,e._rotateRateRangeAdjustment=1;var I=_.clone(s.transform,ht);s._setTransform(b),Ft(e,t,o,i.UNIT_Z),s._setTransform(I),e._globe=y,e._ellipsoid=D;var A=D.maximumRadius;e._rotateFactor=1/A,e._rotateRateRangeAdjustment=A}(e,o,a)):function(e,o,a){var s,r,l=e._scene,d=l.camera,m=e._cameraUnderground,f=i.UNIT_X;if(c.equals(o,e._tiltCenterMousePosition))s=i.clone(e._tiltCenter,nt);else{if(d.position.z<e._minimumPickingTerrainHeight&&(s=ze(e,o,nt)),!g(s)){var T,v=(r=d.getPickRay(o,it)).origin,C=r.direction,S=i.dot(f,C);if(Math.abs(S)>h.EPSILON6&&(T=-i.dot(f,v)/S),!g(T)||T<=0)return e._looking=!0,hi(e,o,a),void c.clone(o,e._tiltCenterMousePosition);s=i.multiplyByScalar(C,T,nt),i.add(v,s,s)}m&&(g(r)||(r=d.getPickRay(o,it)),Ue(e,r,s,s)),c.clone(o,e._tiltCenterMousePosition),i.clone(s,e._tiltCenter)}var b=l.canvas,y=tt;y.x=b.clientWidth/2,y.y=e._tiltCenterMousePosition.y,r=d.getPickRay(y,it);var D=i.clone(i.ZERO,rt);D.x=s.x;var I=t.fromPointNormal(D,f,lt),A=E.rayPlane(r,I,ot),P=d._projection,R=P.ellipsoid;i.fromElements(s.y,s.z,s.x,s);var w=P.unproject(s,dt);R.cartographicToCartesian(w,s);var M,F=x.eastNorthUpToFixedFrame(s,R,at);g(A)?(i.fromElements(A.y,A.z,A.x,A),w=P.unproject(A,dt),R.cartographicToCartesian(w,A),M=x.eastNorthUpToFixedFrame(A,R,st)):M=F;var O=e._globe,H=e._ellipsoid;e._globe=void 0,e._ellipsoid=n.UNIT_SPHERE,e._rotateFactor=1,e._rotateRateRangeAdjustment=1;var N=i.UNIT_Z,z=_.clone(d.transform,ht);d._setTransform(F);var L=i.cross(i.UNIT_Z,i.normalize(d.position,ct),ct),k=i.dot(d.right,L);if(Ft(e,o,a,N,!1,!0),d._setTransform(M),k<0){var B=a.startPosition.y-a.endPosition.y;(m&&B<0||!m&&B>0)&&(N=void 0);var U=d.constrainedAxis;d.constrainedAxis=void 0,Ft(e,o,a,N,!0,!1),d.constrainedAxis=U}else Ft(e,o,a,N,!0,!1);if(g(d.constrainedAxis)){var W=i.cross(d.direction,d.constrainedAxis,pt);i.equalsEpsilon(W,i.ZERO,h.EPSILON6)||(i.dot(W,d.right)<0&&i.negate(W,W),i.cross(W,d.direction,d.up),i.cross(d.direction,d.up,d.right),i.normalize(d.up,d.up),i.normalize(d.right,d.right))}d._setTransform(z),e._globe=O,e._ellipsoid=H;var G=H.maximumRadius;e._rotateFactor=1/G,e._rotateRateRangeAdjustment=G;var V=i.clone(d.positionWC,ct);e.enableCollisionDetection&&pi(e);if(!i.equals(d.positionWC,V)){d._setTransform(M),d.worldToCameraCoordinatesPoint(V,V);var Z=i.magnitudeSquared(V);i.magnitudeSquared(d.position)>Z&&(i.normalize(d.position,d.position),i.multiplyByScalar(d.position,Math.sqrt(Z),d.position));var q=i.angleBetween(V,d.position),X=i.cross(V,d.position,V);i.normalize(X,X);var j=p.fromAxisAngle(X,q,mt),Y=u.fromQuaternion(j,_t);u.multiplyByVector(Y,d.direction,d.direction),u.multiplyByVector(Y,d.up,d.up),i.cross(d.direction,d.up,d.right),i.cross(d.right,d.direction,d.up),d._setTransform(z)}}(e,o,a)}}var ft=new c,gt=new e,Tt=new i;function vt(e,t,n){g(n.distance)&&(n=n.distance);var o,a=e._scene,s=a.camera,r=a.canvas,l=e._cameraUnderground;l?o=t:((o=ft).x=r.clientWidth/2,o.y=r.clientHeight/2);var c,d,h=s.getPickRay(o,gt),m=h.origin,_=h.direction;if(s.position.z<e._minimumPickingTerrainHeight&&(c=ze(e,o,Tt)),g(c)&&(d=i.distance(m,c)),l){var p=function(e,t){var n=t.origin,o=t.direction,a=ke(e),s=i.normalize(n,Be),r=Math.abs(i.dot(s,o));return a*(2*Math.max(r,.5))}(e,h);d=g(d)?Math.min(d,p):p}if(!g(d)){var u=i.UNIT_X;d=-i.dot(u,m)/i.dot(u,_)}Fe(e,t,n,e._zoomFactor,d)}var Ct=new e,Et=new t(i.UNIT_X,0),xt=new i,St=new i,bt=new i;function yt(e,n,o){var a=e._scene,s=a.camera,r=s.getPickRay(n.endPosition,Ct),l=i.clone(s.direction,St);a.mode===f.COLUMBUS_VIEW&&i.fromElements(l.z,l.x,l.y,l);var c=t.fromPointNormal(o,l,Et),d=E.rayPlane(r,c,xt);g(d)&&(l=i.subtract(o,d,l),a.mode===f.COLUMBUS_VIEW&&i.fromElements(l.y,l.z,l.x,l),i.add(s.position,l,s.position))}var Dt=new i,It=new d,At=new i,Pt=new n,Rt=new i,wt=new i;function Mt(e,t,o){var a=e._scene.camera,s=e._cameraUnderground,r=e._ellipsoid;if(_.equals(a.transform,_.IDENTITY)){var l,d,h=r.geodeticSurfaceNormal(a.position,Rt);if(c.equals(t,e._rotateMousePosition))if(e._looking)hi(e,t,o,h);else if(e._rotating)Ft(e,t,o);else if(e._strafing)Ve(e,o);else{if(i.magnitude(a.position)<i.magnitude(e._rotateStartPosition))return;l=i.magnitude(e._rotateStartPosition),(d=At).x=d.y=d.z=l,Wt(e,t,o,r=n.fromCartesian3(d,Pt))}else{e._looking=!1,e._rotating=!1,e._strafing=!1;var m=r.cartesianToCartographic(a.positionWC,It).height,p=e._globe;if(g(p)&&m<e._minimumPickingTerrainHeight){var u=ze(e,o.startPosition,bt);if(g(u)){var f=!1,T=a.getPickRay(o.startPosition,Oe);if(s)f=!0,We(e,T,u,u);else{var v=r.geodeticSurfaceNormal(u,wt);f=!!(Math.abs(i.dot(T.direction,v))<.05)||i.magnitude(a.position)<i.magnitude(u)}f?(c.clone(t,e._strafeEndMousePosition),i.clone(u,e._strafeStartPosition),e._strafing=!0,yt(e,o,e._strafeStartPosition)):(l=i.magnitude(u),(d=At).x=d.y=d.z=l,Wt(e,t,o,r=n.fromCartesian3(d,Pt)),i.clone(u,e._rotateStartPosition))}else e._looking=!0,hi(e,t,o,h)}else g(a.pickEllipsoid(o.startPosition,e._ellipsoid,Dt))?(Wt(e,t,o,e._ellipsoid),i.clone(Dt,e._rotateStartPosition)):m>e._minimumTrackBallHeight?(e._rotating=!0,Ft(e,t,o)):(e._looking=!0,hi(e,t,o,h));c.clone(t,e._rotateMousePosition)}}else Ft(e,t,o)}function Ft(e,t,n,o,a,s){a=S(a,!1),s=S(s,!1);var r=e._scene,l=r.camera,c=r.canvas,d=l.constrainedAxis;g(o)&&(l.constrainedAxis=o);var h=i.magnitude(l.position),m=e._rotateFactor*(h-e._rotateRateRangeAdjustment);m>e._maximumRotateRate&&(m=e._maximumRotateRate),m<e._minimumRotateRate&&(m=e._minimumRotateRate);var _=(n.startPosition.x-n.endPosition.x)/c.clientWidth,p=(n.startPosition.y-n.endPosition.y)/c.clientHeight;_=Math.min(_,e.maximumMovementRatio),p=Math.min(p,e.maximumMovementRatio);var u=m*_*Math.PI*2,f=m*p*Math.PI;a||l.rotateRight(u),s||l.rotateUp(f),l.constrainedAxis=d}var Ot=o.clone(o.UNIT_W),Ht=o.clone(o.UNIT_W),Nt=new i,zt=new i,Lt=new i,kt=new i,Bt=new c,Ut=new c;function Wt(e,t,n,o){var a=e._scene.camera,s=c.clone(n.startPosition,Bt),r=c.clone(n.endPosition,Ut),l=a.pickEllipsoid(s,o,Ot),d=a.pickEllipsoid(r,o,Ht);if(!g(l)||!g(d))return e._rotating=!0,void Ft(e,0,n);if(l=a.worldToCameraCoordinates(l,l),d=a.worldToCameraCoordinates(d,d),g(a.constrainedAxis)){var m=a.constrainedAxis,_=i.mostOrthogonalAxis(m,Nt);i.cross(_,m,_),i.normalize(_,_);var p=i.cross(m,_,zt),u=i.magnitude(l),f=i.dot(m,l),T=Math.acos(f/u),v=i.multiplyByScalar(m,f,Lt);i.subtract(l,v,v),i.normalize(v,v);var C=i.magnitude(d),E=i.dot(m,d),x=Math.acos(E/C),S=i.multiplyByScalar(m,E,kt);i.subtract(d,S,S),i.normalize(S,S);var b=Math.acos(i.dot(v,_));i.dot(v,p)<0&&(b=h.TWO_PI-b);var y=Math.acos(i.dot(S,_));i.dot(S,p)<0&&(y=h.TWO_PI-y);var D,I=b-y;D=i.equalsEpsilon(m,a.position,h.EPSILON2)?a.right:i.cross(m,a.position,Nt);var A,P=i.cross(m,D,Nt),R=i.dot(P,i.subtract(l,m,zt)),w=i.dot(P,i.subtract(d,m,zt));A=R>0&&w>0?x-T:R>0&&w<=0?i.dot(a.position,m)>0?-T-x:T+x:T-x,a.rotateRight(I),a.rotateUp(A)}else{i.normalize(l,l),i.normalize(d,d);var M=i.dot(l,d),F=i.cross(l,d,Nt);if(M<1&&!i.equalsEpsilon(F,i.ZERO,h.EPSILON14)){var O=Math.acos(M);a.rotate(F,O)}}}var Gt=new i,Vt=new d;function Zt(e,t,n){g(n.distance)&&(n=n.distance);var o,a=e._ellipsoid,s=e._scene,r=s.camera,l=s.canvas;v.wgs84ToWindowCoordinates(s,e.getZoomPosition(),t),e._cameraUnderground?o=t:((o=ft).x=l.clientWidth/2,o.y=l.clientHeight/2);var c=a.cartesianToCartographic(r.position,Vt).height,d=c;g(d)||(d=c);var h=i.normalize(r.position,Gt);Fe(e,t,n,e._zoomFactor,d,i.dot(h,r.direction),e.getZoomCartesian3&&e.getZoomCartesian3())}var qt=new c,Xt=new e,jt=new i,Yt=new i,Kt=new _,Qt=new _,Jt=new _,$t=new p,ei=new u,ti=new d,ii=new i;function ni(t,o,a){var s=t._scene.camera;if(_.equals(s.transform,_.IDENTITY))if(g(a.angleAndHeight)&&(a=a.angleAndHeight),c.equals(o,t._tiltCenterMousePosition)||(t._tiltOnEllipsoid=!1,t._looking=!1),t._looking){var r=t._ellipsoid.geodeticSurfaceNormal(s.position,ii);hi(t,o,a,r)}else{var l=t._ellipsoid.cartesianToCartographic(s.position,ti);t._tiltOnEllipsoid||l.height>t._minimumCollisionTerrainHeight?(t._tiltOnEllipsoid=!0,function(t,o,a){var s=t._ellipsoid,r=t._scene,l=r.camera,d=.25*t.minimumZoomDistance,m=s.cartesianToCartographic(l.positionWC,oi).height;if(m-d-1<h.EPSILON3&&a.endPosition.y-a.startPosition.y<0)return;var p=r.canvas,u=qt;u.x=p.clientWidth/2,u.y=p.clientHeight/2;var f,T=l.getPickRay(u,Xt),v=E.rayEllipsoid(T,s);if(g(v))f=e.getPoint(T,v.start,jt);else{if(!(m>t._minimumTrackBallHeight)){t._looking=!0;var C=t._ellipsoid.geodeticSurfaceNormal(l.position,ii);return hi(t,o,a,C),void c.clone(o,t._tiltCenterMousePosition)}var S=E.grazingAltitudeLocation(T,s);if(!g(S))return;var b=s.cartesianToCartographic(S,ti);b.height=0,f=s.cartographicToCartesian(b,jt)}var y=x.eastNorthUpToFixedFrame(f,s,Kt),D=t._globe,I=t._ellipsoid;t._globe=void 0,t._ellipsoid=n.UNIT_SPHERE,t._rotateFactor=1,t._rotateRateRangeAdjustment=1;var A=_.clone(l.transform,Jt);l._setTransform(y),Ft(t,0,a,i.UNIT_Z),l._setTransform(A),t._globe=D,t._ellipsoid=I;var P=I.maximumRadius;t._rotateFactor=1/P,t._rotateRateRangeAdjustment=P}(t,o,a)):function(t,o,a){var s,r,l,d=t._ellipsoid,m=t._scene,f=m.camera,T=t._cameraUnderground;if(c.equals(o,t._tiltCenterMousePosition))s=i.clone(t._tiltCenter,jt);else{if(s=ze(t,o,jt),!g(s)){if(r=f.getPickRay(o,Xt),l=E.rayEllipsoid(r,d),!g(l)){if(d.cartesianToCartographic(f.position,ti).height<=t._minimumTrackBallHeight){t._looking=!0;var v=t._ellipsoid.geodeticSurfaceNormal(f.position,ii);hi(t,o,a,v),c.clone(o,t._tiltCenterMousePosition)}return}s=e.getPoint(r,l.start,jt)}T&&(g(r)||(r=f.getPickRay(o,Xt)),Ue(t,r,s,s)),c.clone(o,t._tiltCenterMousePosition),i.clone(s,t._tiltCenter)}var C=m.canvas,S=qt;S.x=C.clientWidth/2,S.y=t._tiltCenterMousePosition.y,r=f.getPickRay(S,Xt);var b=i.magnitude(s),y=i.fromElements(b,b,b,At),D=n.fromCartesian3(y,Pt);if(l=E.rayEllipsoid(r,D),!g(l))return;var I=i.magnitude(r.origin)>b?l.start:l.stop,A=e.getPoint(r,I,Yt),P=x.eastNorthUpToFixedFrame(s,d,Kt),R=x.eastNorthUpToFixedFrame(A,D,Qt),w=t._globe,M=t._ellipsoid;t._globe=void 0,t._ellipsoid=n.UNIT_SPHERE,t._rotateFactor=1,t._rotateRateRangeAdjustment=1;var F=i.UNIT_Z,O=_.clone(f.transform,Jt);f._setTransform(P);var H=i.cross(A,f.positionWC,pt),N=i.dot(f.rightWC,H);if(Ft(t,0,a,F,!1,!0),f._setTransform(R),N<0){var z=a.startPosition.y-a.endPosition.y;(T&&z<0||!T&&z>0)&&(F=void 0);var L=f.constrainedAxis;f.constrainedAxis=void 0,Ft(t,0,a,F,!0,!1),f.constrainedAxis=L}else Ft(t,0,a,F,!0,!1);if(g(f.constrainedAxis)){var k=i.cross(f.direction,f.constrainedAxis,pt);i.equalsEpsilon(k,i.ZERO,h.EPSILON6)||(i.dot(k,f.right)<0&&i.negate(k,k),i.cross(k,f.direction,f.up),i.cross(f.direction,f.up,f.right),i.normalize(f.up,f.up),i.normalize(f.right,f.right))}f._setTransform(O),t._globe=w,t._ellipsoid=M;var B=M.maximumRadius;t._rotateFactor=1/B,t._rotateRateRangeAdjustment=B;var U=i.clone(f.positionWC,pt);t.enableCollisionDetection&&pi(t);if(!i.equals(f.positionWC,U)){f._setTransform(R),f.worldToCameraCoordinatesPoint(U,U);var W=i.magnitudeSquared(U);i.magnitudeSquared(f.position)>W&&(i.normalize(f.position,f.position),i.multiplyByScalar(f.position,Math.sqrt(W),f.position));var G=i.angleBetween(U,f.position),V=i.cross(U,f.position,U);i.normalize(V,V);var Z=p.fromAxisAngle(V,G,$t),q=u.fromQuaternion(Z,ei);u.multiplyByVector(q,f.direction,f.direction),u.multiplyByVector(q,f.up,f.up),i.cross(f.direction,f.up,f.right),i.cross(f.right,f.direction,f.up),f._setTransform(O)}}(t,o,a)}}var oi=new d;var ai=new c,si=new c,ri=new e,li=new e,ci=new i,di=new i;function hi(e,t,n,o){var a=e._scene.camera,s=ai;s.x=n.startPosition.x,s.y=0;var r=si;r.x=n.endPosition.x,r.y=0;var l,c,d=a.getPickRay(s,ri),m=a.getPickRay(r,li),_=0;a.frustum instanceof C?(l=d.origin,c=m.origin,i.add(a.direction,l,l),i.add(a.direction,c,c),i.subtract(l,a.position,l),i.subtract(c,a.position,c),i.normalize(l,l),i.normalize(c,c)):(l=d.direction,c=m.direction);var p=i.dot(l,c);p<1&&(_=Math.acos(p)),_=n.startPosition.x>n.endPosition.x?-_:_;var u=e._horizontalRotationAxis;if(g(o)?a.look(o,-_):g(u)?a.look(u,-_):a.lookLeft(_),s.x=0,s.y=n.startPosition.y,r.x=0,r.y=n.endPosition.y,d=a.getPickRay(s,ri),m=a.getPickRay(r,li),_=0,a.frustum instanceof C?(l=d.origin,c=m.origin,i.add(a.direction,l,l),i.add(a.direction,c,c),i.subtract(l,a.position,l),i.subtract(c,a.position,c),i.normalize(l,l),i.normalize(c,c)):(l=d.direction,c=m.direction),(p=i.dot(l,c))<1&&(_=Math.acos(p)),_=n.startPosition.y>n.endPosition.y?-_:_,o=S(o,u),g(o)){var f=a.direction,T=i.negate(o,ci),v=i.equalsEpsilon(f,o,h.EPSILON2),E=i.equalsEpsilon(f,T,h.EPSILON2);if(v||E)(v&&_<0||E&&_>0)&&a.look(a.right,-_);else{p=i.dot(f,o);var x=h.acosClamped(p);_>0&&_>x&&(_=x-h.EPSILON4),p=i.dot(f,T),x=h.acosClamped(p),_<0&&-_>x&&(_=-x+h.EPSILON4);var b=i.cross(o,f,di);a.look(b,_)}}else a.lookUp(_)}var mi=new _,_i=new d;function pi(e){e._adjustedHeightForTerrain=!0;var t=e._scene,n=t.mode,o=t.globe;if(g(o)&&n!==f.SCENE2D&&n!==f.MORPHING){var a,s,r=t.camera,l=o.ellipsoid,c=t.mapProjection;_.equals(r.transform,_.IDENTITY)||(a=_.clone(r.transform,mi),s=i.magnitude(r.position),r._setTransform(_.IDENTITY));var d=_i;n===f.SCENE3D?l.cartesianToCartographic(r.position,d):c.unproject(r.position,d);var h=!1;if(d.height<e._minimumCollisionTerrainHeight){var m=e._scene.globeHeight;if(g(m)){var p=m+e.minimumZoomDistance;d.height<p&&(d.height=p,n===f.SCENE3D?l.cartographicToCartesian(d,r.position):c.project(d,r.position),h=!0)}}g(a)&&(r._setTransform(a),h&&(i.normalize(r.position,r.position),i.negate(r.position,r.direction),i.multiplyByScalar(r.position,Math.max(s,e.minimumZoomDistance),r.position),i.normalize(r.direction,r.direction),i.cross(r.direction,r.up,r.right),i.cross(r.right,r.direction,r.up)))}}xe.prototype.onMap=function(){var e=this._scene,t=e.mode,i=e.camera;return t!==f.COLUMBUS_VIEW||Math.abs(i.position.x)-this._maxCoord.x<0&&Math.abs(i.position.y)-this._maxCoord.y<0};var ui=new i,fi=new i;xe.prototype.update=function(){var e=this._scene,t=e.camera,o=e.globe,a=e.mode;_.equals(t.transform,_.IDENTITY)?(this._globe=o,this._ellipsoid=g(this._globe)?this._globe.ellipsoid:e.mapProjection.ellipsoid):(this._globe=void 0,this._ellipsoid=n.UNIT_SPHERE),this._cameraUnderground=e.cameraUnderground&&g(this._globe),this._minimumCollisionTerrainHeight=this.minimumCollisionTerrainHeight*e.terrainExaggeration,this._minimumPickingTerrainHeight=this.minimumPickingTerrainHeight*e.terrainExaggeration,this._minimumTrackBallHeight=this.minimumTrackBallHeight*e.terrainExaggeration;var s=this._ellipsoid.maximumRadius;this._rotateFactor=1/s,this._rotateRateRangeAdjustment=s,this._adjustedHeightForTerrain=!1;var r,l=i.clone(t.positionWC,ui),c=i.clone(t.directionWC,fi);(a===f.SCENE2D||(a===f.COLUMBUS_VIEW?(this._horizontalRotationAxis=i.UNIT_Z,function(e){var t=e._scene.camera;if(_.equals(_.IDENTITY,t.transform)){var i=e._tweens;if(e._aggregator.anyButtonDown&&i.removeAll(),De(e,e.enableTilt,e.tiltEventTypes,ut,e.inertiaSpin,"_lastInertiaTiltMovement"),De(e,e.enableTranslate,e.translateEventTypes,et,e.inertiaTranslate,"_lastInertiaTranslateMovement"),De(e,e.enableZoom,e.zoomEventTypes,vt,e.inertiaZoom,"_lastInertiaZoomMovement"),De(e,e.enableLook,e.lookEventTypes,hi),!e._aggregator.anyButtonDown&&!i.contains(e._tween)){var n=t.createCorrectPositionTween(e.bounceAnimationTime);g(n)&&(e._tween=i.add(n))}i.update()}else De(e,e.enableRotate,e.rotateEventTypes,Ft,e.inertiaSpin,"_lastInertiaSpinMovement"),De(e,e.enableZoom,e.zoomEventTypes,Zt,e.inertiaZoom,"_lastInertiaZoomMovement")}(this)):a===f.SCENE3D&&(this._horizontalRotationAxis=void 0,De(r=this,r.enableRotate,r.rotateEventTypes,Mt,r.inertiaSpin,"_lastInertiaSpinMovement"),De(r,r.enableZoom,r.zoomEventTypes,Zt,r.inertiaZoom,"_lastInertiaZoomMovement"),De(r,r.enableTilt,r.tiltEventTypes,ni,r.inertiaSpin,"_lastInertiaTiltMovement"),De(r,r.enableLook,r.lookEventTypes,hi))),this.enableCollisionDetection&&!this._adjustedHeightForTerrain)&&((!i.equals(l,t.positionWC)||!i.equals(c,t.directionWC))&&pi(this));this._aggregator.reset()},xe.prototype.isDestroyed=function(){return!1},xe.prototype.destroy=function(){return this._tweens.removeAll(),this._aggregator=this._aggregator&&this._aggregator.destroy(),T(this)};var gi,Ti,vi=b.SHOW_INDEX,Ci=b.POSITION_INDEX,Ei=b.PIXEL_OFFSET_INDEX,xi=b.EYE_OFFSET_INDEX,Si=b.HORIZONTAL_ORIGIN_INDEX,bi=b.VERTICAL_ORIGIN_INDEX,yi=b.SCALE_INDEX,Di=b.IMAGE_INDEX_INDEX,Ii=b.COLOR_INDEX,Ai=b.ROTATION_INDEX,Pi=b.ALIGNED_AXIS_INDEX,Ri=b.SCALE_BY_DISTANCE_INDEX,wi=b.TRANSLUCENCY_BY_DISTANCE_INDEX,Mi=b.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX,Fi=b.DISTANCE_DISPLAY_CONDITION,Oi=b.DISABLE_DEPTH_DISTANCE,Hi=b.TEXTURE_COORDINATE_BOUNDS,Ni=b.SDF_INDEX,zi=b.NUMBER_OF_PROPERTIES,Li={positionHighAndScale:0,positionLowAndRotation:1,compressedAttribute0:2,compressedAttribute1:3,compressedAttribute2:4,eyeOffset:5,scaleByDistance:6,pixelOffsetScaleByDistance:7,compressedAttribute3:8,textureCoordinateBoundsOrLabelTranslate:9,a_batchId:10,sdf:11},ki={direction:0,positionHighAndScale:1,positionLowAndRotation:2,compressedAttribute0:3,compressedAttribute1:4,compressedAttribute2:5,eyeOffset:6,scaleByDistance:7,pixelOffsetScaleByDistance:8,compressedAttribute3:9,textureCoordinateBoundsOrLabelTranslate:10,a_batchId:11,sdf:12};function Bi(e){e=S(e,S.EMPTY_OBJECT),this._scene=e.scene,this._batchTable=e.batchTable,this._textureAtlas=void 0,this._textureAtlasGUID=void 0,this._destroyTextureAtlas=!0,this._sp=void 0,this._spTranslucent=void 0,this._rsOpaque=void 0,this._rsTranslucent=void 0,this._vaf=void 0,this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!1,this._shaderRotation=!1,this._compiledShaderRotation=!1,this._shaderAlignedAxis=!1,this._compiledShaderAlignedAxis=!1,this._shaderScaleByDistance=!1,this._compiledShaderScaleByDistance=!1,this._shaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistance=!1,this._shaderPixelOffsetScaleByDistance=!1,this._compiledShaderPixelOffsetScaleByDistance=!1,this._shaderDistanceDisplayCondition=!1,this._compiledShaderDistanceDisplayCondition=!1,this._shaderDisableDepthDistance=!1,this._compiledShaderDisableDepthDistance=!1,this._shaderClampToGround=!1,this._compiledShaderClampToGround=!1,this._propertiesChanged=new Uint32Array(zi),this._maxSize=0,this._maxEyeOffset=0,this._maxScale=1,this._maxPixelOffset=0,this._allHorizontalCenter=!0,this._allVerticalCenter=!0,this._allSizedInMeters=!0,this._baseVolume=new P,this._baseVolumeWC=new P,this._baseVolume2D=new P,this._boundingVolume=new P,this._boundingVolumeDirty=!1,this._colorCommands=[],this.showRatio=0,this.modelMatrix=_.clone(S(e.modelMatrix,_.IDENTITY)),this._modelMatrix=_.clone(_.IDENTITY),this.debugShowBoundingVolume=S(e.debugShowBoundingVolume,!1),this.debugShowTextureAtlas=S(e.debugShowTextureAtlas,!1),this.blendOption=S(e.blendOption,R.OPAQUE_AND_TRANSLUCENT),this._blendOption=void 0,this._mode=f.SCENE3D,this._buffersUsage=[y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW,y.STATIC_DRAW],this._highlightColor=B.clone(B.WHITE);var t=this;this._uniforms={u_atlas:function(){return t._textureAtlas.texture},u_highlightColor:function(){return t._highlightColor},u_showRatio:function(){return 1e3*t.showRatio}};var i=this._scene;g(i)&&g(i.terrainProviderChanged)&&(this._removeCallbackFunc=i.terrainProviderChanged.addEventListener((function(){for(var e=this._billboards,t=e.length,i=0;i<t;++i)e[i]._updateClamping()}),this))}function Ui(e){for(var t=e.length,i=0;i<t;++i)e[i]&&e[i]._destroy()}function Wi(e){if(e._billboardsRemoved){e._billboardsRemoved=!1;for(var t=[],i=e._billboards,n=i.length,o=0,a=0;o<n;++o){var s=i[o];s&&(s._index=a++,t.push(s))}e._billboards=t}}function Gi(e){var t=e.cache.billboardCollection_indexBufferBatched;if(g(t))return t;for(var i=new Uint16Array(98298),n=0,o=0;n<98298;n+=6,o+=4)i[n]=o,i[n+1]=o+1,i[n+2]=o+2,i[n+3]=o+0,i[n+4]=o+2,i[n+5]=o+3;return(t=U.createIndexBuffer({context:e,typedArray:i,usage:y.STATIC_DRAW,indexDatatype:W.UNSIGNED_SHORT})).vertexArrayDestroyable=!1,e.cache.billboardCollection_indexBufferBatched=t,t}function Vi(e){var t=e.cache.billboardCollection_indexBufferInstanced;return g(t)||((t=U.createIndexBuffer({context:e,typedArray:new Uint16Array([0,1,2,0,2,3]),usage:y.STATIC_DRAW,indexDatatype:W.UNSIGNED_SHORT})).vertexArrayDestroyable=!1,e.cache.billboardCollection_indexBufferInstanced=t),t}function Zi(e){var t=e.cache.billboardCollection_vertexBufferInstanced;return g(t)||((t=U.createVertexBuffer({context:e,typedArray:new Float32Array([0,0,1,0,1,1,0,1]),usage:y.STATIC_DRAW})).vertexArrayDestroyable=!1,e.cache.billboardCollection_vertexBufferInstanced=t),t}Object.defineProperties(Bi.prototype,{length:{get:function(){return Wi(this),this._billboards.length}},textureAtlas:{get:function(){return this._textureAtlas},set:function(e){this._textureAtlas!==e&&(this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._textureAtlas=e,this._createVertexArray=!0)}},destroyTextureAtlas:{get:function(){return this._destroyTextureAtlas},set:function(e){this._destroyTextureAtlas=e}}}),Bi.prototype.add=function(e){var t=new b(e,this);return t._showRatio=e.showRatio,t._index=this._billboards.length,this._billboards.push(t),this._createVertexArray=!0,t},Bi.prototype.remove=function(e){return!!this.contains(e)&&(this._billboards[e._index]=null,this._billboardsRemoved=!0,this._createVertexArray=!0,e._destroy(),!0)},Bi.prototype.removeAll=function(){Ui(this._billboards),this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!0},Bi.prototype._updateBillboard=function(e,t){e._dirty||(this._billboardsToUpdate[this._billboardsToUpdateIndex++]=e),++this._propertiesChanged[t]},Bi.prototype.contains=function(e){return g(e)&&e._billboardCollection===this},Bi.prototype.get=function(e){return Wi(this),this._billboards[e]},Bi.prototype.computeNewBuffersUsage=function(){for(var e=this._buffersUsage,t=!1,i=this._propertiesChanged,n=0;n<zi;++n){var o=0===i[n]?y.STATIC_DRAW:y.STREAM_DRAW;t=t||e[n]!==o,e[n]=o}return t};var qi=new D;function Xi(e,t,i,n,o){var a,s=n[gi.positionHighAndScale],r=n[gi.positionLowAndRotation],l=o._getActualPosition();e._mode===f.SCENE3D&&(P.expand(e._baseVolume,l,e._baseVolume),e._boundingVolumeDirty=!0),D.fromCartesian(l,qi);var c=o.scale;e._maxScale=Math.max(e._maxScale,c);var d=qi.high,h=qi.low,m=Math.floor(1e3*o._showRatio);e._instanced?(s(a=o._index,d.x,d.y,d.z,c),r(a,h.x,h.y,h.z,m)):(s((a=4*o._index)+0,d.x,d.y,d.z,c),s(a+1,d.x,d.y,d.z,c),s(a+2,d.x,d.y,d.z,c),s(a+3,d.x,d.y,d.z,c),r(a+0,h.x,h.y,h.z,m),r(a+1,h.x,h.y,h.z,m),r(a+2,h.x,h.y,h.z,m),r(a+3,h.x,h.y,h.z,m))}var ji=new c;function Yi(e,t,i,n,o){var a,s=n[gi.compressedAttribute0],r=o.pixelOffset,l=r.x,c=r.y,d=o._translate,m=d.x,_=d.y;e._maxPixelOffset=Math.max(e._maxPixelOffset,Math.abs(l+m),Math.abs(-c+_));var p=o.horizontalOrigin,u=o._verticalOrigin,f=o.show&&o.clusterShow;0===o.color.alpha&&(f=!1),u===V.BASELINE&&(u=V.BOTTOM),e._allHorizontalCenter=e._allHorizontalCenter&&p===Z.CENTER,e._allVerticalCenter=e._allVerticalCenter&&u===V.CENTER;var g=0,T=0,v=0,C=0,E=o._imageIndex;if(-1!==E){var x=i[E];g=x.x,T=x.y,v=x.width,C=x.height}var S=g+v,b=T+C,y=128*Math.floor(h.clamp(l,-32768,32768)+32768);y+=32*(p+1),y+=8*(u+1),y+=4*(f?1:0);var D=256*Math.floor(h.clamp(c,-32768,32768)+32768),I=256*Math.floor(h.clamp(m,-32768,32768)+32768),A=.00390625*(h.clamp(_,-32768,32768)+32768),P=Math.floor(A);D+=P,I+=Math.floor(256*(A-P)),ji.x=g,ji.y=T;var R=q.compressTextureCoordinates(ji);ji.x=S;var w=q.compressTextureCoordinates(ji);ji.y=b;var M=q.compressTextureCoordinates(ji);ji.x=g;var F=q.compressTextureCoordinates(ji);e._instanced?s(a=o._index,y,D,I,R):(s((a=4*o._index)+0,y+0,D,I,R),s(a+1,y+2,D,I,w),s(a+2,y+3,D,I,M),s(a+3,y+1,D,I,F))}function Ki(e,t,n,o,a){var s,r=o[gi.compressedAttribute1],l=a.alignedAxis;i.equals(l,i.ZERO)||(e._shaderAlignedAxis=!0);var c=0,d=1,m=1,_=1,p=a.translucencyByDistance;g(p)&&(c=p.near,d=p.nearValue,m=p.far,_=p.farValue,1===d&&1===_||(e._shaderTranslucencyByDistance=!0));var u=0,f=a._imageIndex;-1!==f&&(u=n[f].width);var T=e._textureAtlas.texture.width,v=Math.round(S(a.width,T*u));e._maxSize=Math.max(e._maxSize,v);var C=h.clamp(v,0,65536),E=0;Math.abs(i.magnitudeSquared(l)-1)<h.EPSILON6&&(E=q.octEncodeFloat(l)),C=256*C+(d=1===(d=h.clamp(d,0,1))?255:255*d|0),E=256*E+(_=1===(_=h.clamp(_,0,1))?255:255*_|0),e._instanced?r(s=a._index,C,E,c,m):(r((s=4*a._index)+0,C,E,c,m),r(s+1,C,E,c,m),r(s+2,C,E,c,m),r(s+3,C,E,c,m))}function Qi(e,t,n,o,a){var s,r=o[gi.compressedAttribute2],l=a.color,c=g(e._batchTable)?B.WHITE:a.getPickId(t).color,d=a.sizeInMeters?1:0,m=Math.abs(i.magnitudeSquared(a.alignedAxis)-1)<h.EPSILON6?1:0;e._allSizedInMeters=e._allSizedInMeters&&1===d;var _=0,p=a._imageIndex;-1!==p&&(_=n[p].height);var u=e._textureAtlas.texture.dimensions,f=Math.round(S(a.height,u.y*_));e._maxSize=Math.max(e._maxSize,f);var T=S(a._labelHorizontalOrigin,-2),v=4*f+(T+=2),C=B.floatToByte(l.red),E=B.floatToByte(l.green),x=B.floatToByte(l.blue),b=65536*C+256*E+x,y=65536*(C=B.floatToByte(c.red))+256*(E=B.floatToByte(c.green))+(x=B.floatToByte(c.blue)),D=65536*B.floatToByte(l.alpha)+256*B.floatToByte(c.alpha);D+=2*d+m,e._instanced?r(s=a._index,b,y,D,v):(r((s=4*a._index)+0,b,y,D,v),r(s+1,b,y,D,v),r(s+2,b,y,D,v),r(s+3,b,y,D,v))}function Ji(e,t,i,n,o){var a,s=n[gi.eyeOffset],r=o.eyeOffset,l=r.z;if(o._heightReference!==X.NONE&&(l*=1.005),e._maxEyeOffset=Math.max(e._maxEyeOffset,Math.abs(r.x),Math.abs(r.y),Math.abs(l)),e._instanced){var c=0,d=0,h=o._imageIndex;if(-1!==h){var m=i[h];c=m.width,d=m.height}ji.x=c,ji.y=d;var _=q.compressTextureCoordinates(ji);s(a=o._index,r.x,r.y,l,_)}else s((a=4*o._index)+0,r.x,r.y,l,0),s(a+1,r.x,r.y,l,0),s(a+2,r.x,r.y,l,0),s(a+3,r.x,r.y,l,0)}function $i(e,t,i,n,o){var a,s=n[gi.scaleByDistance],r=0,l=1,c=1,d=1,h=o.scaleByDistance;g(h)&&(r=h.near,l=h.nearValue,c=h.far,d=h.farValue,1===l&&1===d||(e._shaderScaleByDistance=!0)),e._instanced?s(a=o._index,r,l,c,d):(s((a=4*o._index)+0,r,l,c,d),s(a+1,r,l,c,d),s(a+2,r,l,c,d),s(a+3,r,l,c,d))}function en(e,t,i,n,o){var a,s=n[gi.pixelOffsetScaleByDistance],r=0,l=1,c=1,d=1,h=o.pixelOffsetScaleByDistance;g(h)&&(r=h.near,l=h.nearValue,c=h.far,d=h.farValue,1===l&&1===d||(e._shaderPixelOffsetScaleByDistance=!0)),e._instanced?s(a=o._index,r,l,c,d):(s((a=4*o._index)+0,r,l,c,d),s(a+1,r,l,c,d),s(a+2,r,l,c,d),s(a+3,r,l,c,d))}function tn(e,t,i,n,o){var a,s=n[gi.compressedAttribute3],r=0,l=Number.MAX_VALUE,c=o.distanceDisplayCondition;g(c)&&(r=c.near,l=c.far,r*=r,l*=l,e._shaderDistanceDisplayCondition=!0);var d,m,_=o.disableDepthTestDistance,p=o.heightReference===X.CLAMP_TO_GROUND&&e._scene.context.depthTexture;if(g(_)||(_=p?5e3:0),_*=_,(p||_>0)&&(e._shaderDisableDepthDistance=!0,_===Number.POSITIVE_INFINITY&&(_=-1)),g(o._labelDimensions))m=o._labelDimensions.x,d=o._labelDimensions.y;else{var u=0,f=0,T=o._imageIndex;if(-1!==T){var v=i[T];u=v.height,f=v.width}d=Math.round(S(o.height,e._textureAtlas.texture.dimensions.y*u));var C=e._textureAtlas.texture.width;m=Math.round(S(o.width,C*f))}var E=4096*Math.floor(h.clamp(m,0,4096))+Math.floor(h.clamp(d,0,4096));e._instanced?s(a=o._index,r,l,_,E):(s((a=4*o._index)+0,r,l,_,E),s(a+1,r,l,_,E),s(a+2,r,l,_,E),s(a+3,r,l,_,E))}function nn(e,t,i,n,o){var a;o.heightReference===X.CLAMP_TO_GROUND&&(e._shaderClampToGround=e._scene.context.depthTexture);var s=n[gi.textureCoordinateBoundsOrLabelTranslate];if(O.maximumVertexTextureImageUnits>0){var r=0,l=0;return g(o._labelTranslate)&&(r=o._labelTranslate.x,l=o._labelTranslate.y),void(e._instanced?s(a=o._index,r,l,0,0):(s((a=4*o._index)+0,r,l,0,0),s(a+1,r,l,0,0),s(a+2,r,l,0,0),s(a+3,r,l,0,0)))}var c=0,d=0,h=0,m=0,_=o._imageIndex;if(-1!==_){var p=i[_];c=p.x,d=p.y,h=p.width,m=p.height}var u=c+h,f=d+m;e._instanced?s(a=o._index,c,d,u,f):(s((a=4*o._index)+0,c,d,u,f),s(a+1,c,d,u,f),s(a+2,c,d,u,f),s(a+3,c,d,u,f))}function on(e,t,i,n,o){if(e._sdf){var a,s=n[gi.sdf],r=o.outlineColor,l=o.outlineWidth,c=65536*B.floatToByte(r.red)+256*B.floatToByte(r.green)+B.floatToByte(r.blue),d=l/N.RADIUS,h=65536*B.floatToByte(r.alpha)+256*B.floatToByte(d);e._instanced?s(a=o._index,c,h):(s((a=4*o._index)+0,c+0,h),s(a+1,c+2,h),s(a+2,c+3,h),s(a+3,c+1,h))}}function an(e,t,i,n,o){Xi(e,0,0,n,o),Yi(e,0,i,n,o),Ki(e,0,i,n,o),Qi(e,t,i,n,o),Ji(e,0,i,n,o),$i(e,0,0,n,o),en(e,0,0,n,o),tn(e,0,i,n,o),nn(e,0,i,n,o),function(e,t,i,n,o){if(g(e._batchTable)){var a,s=n[gi.a_batchId],r=o._batchIndex;e._instanced?s(a=o._index,r):(s(0+(a=4*o._index),r),s(a+1,r),s(a+2,r),s(a+3,r))}}(e,0,0,n,o),on(e,0,0,n,o)}function sn(e,t,i,n,o,a){var s;n.mode===f.SCENE3D?(s=e._baseVolume,e._boundingVolumeDirty=!0):s=e._baseVolume2D;for(var r=[],l=0;l<i;++l){var c=t[l],d=c.position,h=b._computeActualPosition(c,d,n,o);g(h)&&(c._setActualPosition(h),a?r.push(h):P.expand(s,h,s))}a&&P.fromPoints(r,s)}var rn=[];let ln,cn,dn;function hn(){cn!==ln&&(dn||(dn=document.querySelector("#map").style),dn.cursor=cn=ln)}Bi.prototype.update=function(e){Wi(this);var t=this._billboards,i=t.length,n=e.context;this._instanced=n.instancedArrays,gi=this._instanced?ki:Li,Ti=this._instanced?Vi:Gi;var o=this._textureAtlas;if(!g(o)){o=this._textureAtlas=new I({context:n});for(var a=0;a<i;++a)t[a]._loadImage()}var s=o.textureCoordinates;if(0!==s.length){!function(e,t){var i=t.mode,n=e._billboards,o=e._billboardsToUpdate,a=e._modelMatrix;!e._createVertexArray&&e._mode===i&&i===f.SCENE3D||_.equals(a,e.modelMatrix)?i===f.MORPHING?sn(e,n,n.length,t,a,!0):i!==f.SCENE2D&&i!==f.COLUMBUS_VIEW||sn(e,o,e._billboardsToUpdateIndex,t,a,!1):(e._mode=i,_.clone(e.modelMatrix,a),e._createVertexArray=!0,i!==f.SCENE3D&&i!==f.SCENE2D&&i!==f.COLUMBUS_VIEW||sn(e,n,n.length,t,a,!0))}(this,e),i=(t=this._billboards).length;var r,l=this._billboardsToUpdate,c=this._billboardsToUpdateIndex,d=this._propertiesChanged,h=o.guid,m=this._createVertexArray||this._textureAtlasGUID!==h;this._textureAtlasGUID=h;var p=e.passes,u=p.pick;if(m||!u&&this.computeNewBuffersUsage()){this._createVertexArray=!1;for(var T=0;T<zi;++T)d[T]=0;if(this._vaf=this._vaf&&this._vaf.destroy(),i>0){this._vaf=function(e,t,i,n,o,a){var s=[{index:gi.positionHighAndScale,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Ci]},{index:gi.positionLowAndRotation,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Ci]},{index:gi.compressedAttribute0,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Ei]},{index:gi.compressedAttribute1,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[wi]},{index:gi.compressedAttribute2,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Ii]},{index:gi.eyeOffset,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[xi]},{index:gi.scaleByDistance,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Ri]},{index:gi.pixelOffsetScaleByDistance,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Mi]},{index:gi.compressedAttribute3,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Fi]},{index:gi.textureCoordinateBoundsOrLabelTranslate,componentsPerAttribute:4,componentDatatype:G.FLOAT,usage:i[Hi]}];return n&&s.push({index:gi.direction,componentsPerAttribute:2,componentDatatype:G.FLOAT,vertexBuffer:Zi(e)}),g(o)&&s.push({index:gi.a_batchId,componentsPerAttribute:1,componentDatatyps:G.FLOAT,bufferUsage:y.STATIC_DRAW}),a&&s.push({index:gi.sdf,componentsPerAttribute:2,componentDatatype:G.FLOAT,usage:i[Ni]}),new A(e,s,n?t:4*t,n)}(n,i,this._buffersUsage,this._instanced,this._batchTable,this._sdf),r=this._vaf.writers;for(var v=0;v<i;++v){var C=this._billboards[v];C._dirty=!1,an(this,n,s,r,C)}this._vaf.commit(Ti(n))}this._billboardsToUpdateIndex=0}else if(c>0){var E=rn;E.length=0,(d[Ci]||d[Ai]||d[yi])&&E.push(Xi),(d[Di]||d[Ei]||d[Si]||d[bi]||d[vi])&&(E.push(Yi),this._instanced&&E.push(Ji)),(d[Di]||d[Pi]||d[wi])&&(E.push(Ki),E.push(Qi)),(d[Di]||d[Ii])&&E.push(Qi),d[xi]&&E.push(Ji),d[Ri]&&E.push($i),d[Mi]&&E.push(en),(d[Fi]||d[Oi]||d[Di]||d[Ci])&&E.push(tn),(d[Di]||d[Ci])&&E.push(nn),d[Ni]&&E.push(on);var x=E.length;if(r=this._vaf.writers,c/i>.1){for(var S=0;S<c;++S){var b=l[S];b._dirty=!1;for(var D=0;D<x;++D)E[D](this,n,s,r,b)}this._vaf.commit(Ti(n))}else{for(var B=0;B<c;++B){var U=l[B];U._dirty=!1;for(var W=0;W<x;++W)E[W](this,n,s,r,U);this._instanced?this._vaf.subCommit(U._index,1):this._vaf.subCommit(4*U._index,4)}this._vaf.endSubCommits()}this._billboardsToUpdateIndex=0}if(c>1.5*i&&(l.length=i),g(this._vaf)&&g(this._vaf.va)){var V;this._boundingVolumeDirty&&(this._boundingVolumeDirty=!1,P.transform(this._baseVolume,this.modelMatrix,this._baseVolumeWC));var Z=_.IDENTITY;e.mode===f.SCENE3D?(Z=this.modelMatrix,V=P.clone(this._baseVolumeWC,this._boundingVolume)):V=P.clone(this._baseVolume2D,this._boundingVolume),function(e,t,i){var n=1;e._allSizedInMeters&&0===e._maxPixelOffset||(n=t.camera.getPixelSize(i,t.context.drawingBufferWidth,t.context.drawingBufferHeight));var o=n*e._maxScale*e._maxSize*2;e._allHorizontalCenter&&e._allVerticalCenter&&(o*=.5);var a=n*e._maxPixelOffset+e._maxEyeOffset;i.radius+=o+a}(this,e,V);var q,X,j,Y,K,Q=this._blendOption!==this.blendOption;if(this._blendOption=this.blendOption,Q){this._blendOption===R.OPAQUE||this._blendOption===R.OPAQUE_AND_TRANSLUCENT?this._rsOpaque=w.fromCache({depthTest:{enabled:!0,func:M.LESS},depthMask:!0}):this._rsOpaque=void 0;var J=this._blendOption===R.TRANSLUCENT;this._blendOption===R.TRANSLUCENT||this._blendOption===R.OPAQUE_AND_TRANSLUCENT?this._rsTranslucent=w.fromCache({depthTest:{enabled:!0,func:J?M.LEQUAL:M.LESS},depthMask:J,blending:F.ALPHA_BLEND}):this._rsTranslucent=void 0}this._shaderDisableDepthDistance=this._shaderDisableDepthDistance||0!==e.minimumDisableDepthTestDistance;var $=O.maximumVertexTextureImageUnits>0;if(Q||this._shaderRotation!==this._compiledShaderRotation||this._shaderAlignedAxis!==this._compiledShaderAlignedAxis||this._shaderScaleByDistance!==this._compiledShaderScaleByDistance||this._shaderTranslucencyByDistance!==this._compiledShaderTranslucencyByDistance||this._shaderPixelOffsetScaleByDistance!==this._compiledShaderPixelOffsetScaleByDistance||this._shaderDistanceDisplayCondition!==this._compiledShaderDistanceDisplayCondition||this._shaderDisableDepthDistance!==this._compiledShaderDisableDepthDistance||this._shaderClampToGround!==this._compiledShaderClampToGround||this._sdf!==this._compiledSDF){q="#ifdef INSTANCED\nattribute vec2 direction;\n#endif\nattribute vec4 positionHighAndScale;\nattribute vec4 positionLowAndRotation;\nattribute vec4 compressedAttribute0;                       // pixel offset, translate, horizontal origin, vertical origin, show, direction, texture coordinates (texture offset)\nattribute vec4 compressedAttribute1;                       // aligned axis, translucency by distance, image width\nattribute vec4 compressedAttribute2;                       // label horizontal origin, image height, color, pick color, size in meters, valid aligned axis, 13 bits free\nattribute vec4 eyeOffset;                                  // eye offset in meters, 4 bytes free (texture range)\nattribute vec4 scaleByDistance;                            // near, nearScale, far, farScale\nattribute vec4 pixelOffsetScaleByDistance;                 // near, nearScale, far, farScale\nattribute vec4 compressedAttribute3;                       // distance display condition near, far, disableDepthTestDistance, dimensions\nattribute vec2 sdf;                                        // sdf outline color (rgb) and width (w)\n#if defined(VERTEX_DEPTH_CHECK) || defined(FRAGMENT_DEPTH_CHECK)\nattribute vec4 textureCoordinateBoundsOrLabelTranslate;    // the min and max x and y values for the texture coordinates\n#endif\n#ifdef VECTOR_TILE\nattribute float a_batchId;\n#endif\n\nvarying vec2 v_textureCoordinates;\n#ifdef FRAGMENT_DEPTH_CHECK\nvarying vec4 v_textureCoordinateBounds;\nvarying vec4 v_originTextureCoordinateAndTranslate;\nvarying vec4 v_compressed;                                 // x: eyeDepth, y: applyTranslate & enableDepthCheck, z: dimensions, w: imageSize\nvarying mat2 v_rotationMatrix;\n#endif\n\nvarying vec4 v_pickColor;\nvarying vec4 v_color;\nuniform float u_showRatio;\n\n#ifdef SDF\nvarying vec4 v_outlineColor;\nvarying float v_outlineWidth;\n#endif\n\nconst float UPPER_BOUND = 32768.0;\n\nconst float SHIFT_LEFT16 = 65536.0;\nconst float SHIFT_LEFT12 = 4096.0;\nconst float SHIFT_LEFT8 = 256.0;\nconst float SHIFT_LEFT7 = 128.0;\nconst float SHIFT_LEFT5 = 32.0;\nconst float SHIFT_LEFT3 = 8.0;\nconst float SHIFT_LEFT2 = 4.0;\nconst float SHIFT_LEFT1 = 2.0;\n\nconst float SHIFT_RIGHT12 = 1.0 / 4096.0;\nconst float SHIFT_RIGHT8 = 1.0 / 256.0;\nconst float SHIFT_RIGHT7 = 1.0 / 128.0;\nconst float SHIFT_RIGHT5 = 1.0 / 32.0;\nconst float SHIFT_RIGHT3 = 1.0 / 8.0;\nconst float SHIFT_RIGHT2 = 1.0 / 4.0;\nconst float SHIFT_RIGHT1 = 1.0 / 2.0;\n\nvec4 addScreenSpaceOffset(vec4 positionEC, vec2 imageSize, float scale, vec2 direction, vec2 origin, vec2 translate, vec2 pixelOffset, vec3 alignedAxis, bool validAlignedAxis, float rotation, bool sizeInMeters, out mat2 rotationMatrix, out float mpp)\n{\n    // Note the halfSize cannot be computed in JavaScript because it is sent via\n    // compressed vertex attributes that coerce it to an integer.\n    vec2 halfSize = imageSize * scale * 0.5;\n    halfSize *= ((direction * 2.0) - 1.0);\n\n    vec2 originTranslate = origin * abs(halfSize);\n\n    if (sizeInMeters)\n    {\n        positionEC.xy += halfSize;\n    }\n\n    mpp = czm_metersPerPixel(positionEC);\n\n    if (!sizeInMeters)\n    {\n        originTranslate *= mpp;\n    }\n\n    positionEC.xy += originTranslate;\n    if (!sizeInMeters)\n    {\n        positionEC.xy += halfSize * mpp;\n    }\n\n    positionEC.xy += translate * mpp;\n    positionEC.xy += pixelOffset * mpp;\n    return positionEC;\n}\n\n#ifdef VERTEX_DEPTH_CHECK\nfloat getGlobeDepth(vec4 positionEC)\n{\n    vec4 posWC = czm_eyeToWindowCoordinates(positionEC);\n\n    float globeDepth = czm_unpackDepth(texture2D(czm_globeDepthTexture, posWC.xy / czm_viewport.zw));\n\n    if (globeDepth == 0.0)\n    {\n        return 0.0; // not on the globe\n    }\n\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(posWC.xy, globeDepth);\n    return eyeCoordinate.z / eyeCoordinate.w;\n}\n#endif\nvoid main()\n{\n    // Modifying this shader may also require modifications to Billboard._computeScreenSpacePosition\n\n    // unpack attributes\n    vec3 positionHigh = positionHighAndScale.xyz;\n    vec3 positionLow = positionLowAndRotation.xyz;\n    float showRatio = positionLowAndRotation.w;\n    float scale = positionHighAndScale.w;\n\n#if defined(ROTATION) || defined(ALIGNED_AXIS)\n    float rotation = positionLowAndRotation.w;\n#else\n    float rotation = 0.0;\n#endif\n\n    float compressed = compressedAttribute0.x;\n\n    vec2 pixelOffset;\n    pixelOffset.x = floor(compressed * SHIFT_RIGHT7);\n    compressed -= pixelOffset.x * SHIFT_LEFT7;\n    pixelOffset.x -= UPPER_BOUND;\n\n    vec2 origin;\n    origin.x = floor(compressed * SHIFT_RIGHT5);\n    compressed -= origin.x * SHIFT_LEFT5;\n\n    origin.y = floor(compressed * SHIFT_RIGHT3);\n    compressed -= origin.y * SHIFT_LEFT3;\n\n#ifdef FRAGMENT_DEPTH_CHECK\n    vec2 depthOrigin = origin.xy;\n#endif\n    origin -= vec2(1.0);\n\n    float show = floor(compressed * SHIFT_RIGHT2);\n    compressed -= show * SHIFT_LEFT2;\n\n#ifdef INSTANCED\n    vec2 textureCoordinatesBottomLeft = czm_decompressTextureCoordinates(compressedAttribute0.w);\n    vec2 textureCoordinatesRange = czm_decompressTextureCoordinates(eyeOffset.w);\n    vec2 textureCoordinates = textureCoordinatesBottomLeft + direction * textureCoordinatesRange;\n#else\n    vec2 direction;\n    direction.x = floor(compressed * SHIFT_RIGHT1);\n    direction.y = compressed - direction.x * SHIFT_LEFT1;\n\n    vec2 textureCoordinates = czm_decompressTextureCoordinates(compressedAttribute0.w);\n#endif\n\n    float temp = compressedAttribute0.y  * SHIFT_RIGHT8;\n    pixelOffset.y = -(floor(temp) - UPPER_BOUND);\n\n    vec2 translate;\n    translate.y = (temp - floor(temp)) * SHIFT_LEFT16;\n\n    temp = compressedAttribute0.z * SHIFT_RIGHT8;\n    translate.x = floor(temp) - UPPER_BOUND;\n\n    translate.y += (temp - floor(temp)) * SHIFT_LEFT8;\n    translate.y -= UPPER_BOUND;\n\n    temp = compressedAttribute1.x * SHIFT_RIGHT8;\n    float temp2 = floor(compressedAttribute2.w * SHIFT_RIGHT2);\n\n    vec2 imageSize = vec2(floor(temp), temp2);\n\n#ifdef FRAGMENT_DEPTH_CHECK\n    float labelHorizontalOrigin = floor(compressedAttribute2.w - (temp2 * SHIFT_LEFT2));\n    float applyTranslate = 0.0;\n    if (labelHorizontalOrigin != 0.0) // is a billboard, so set apply translate to false\n    {\n        applyTranslate = 1.0;\n        labelHorizontalOrigin -= 2.0;\n        depthOrigin.x = labelHorizontalOrigin + 1.0;\n    }\n\n    depthOrigin = vec2(1.0) - (depthOrigin * 0.5);\n#endif\n\n#ifdef EYE_DISTANCE_TRANSLUCENCY\n    vec4 translucencyByDistance;\n    translucencyByDistance.x = compressedAttribute1.z;\n    translucencyByDistance.z = compressedAttribute1.w;\n\n    translucencyByDistance.y = ((temp - floor(temp)) * SHIFT_LEFT8) / 255.0;\n\n    temp = compressedAttribute1.y * SHIFT_RIGHT8;\n    translucencyByDistance.w = ((temp - floor(temp)) * SHIFT_LEFT8) / 255.0;\n#endif\n\n#if defined(VERTEX_DEPTH_CHECK) || defined(FRAGMENT_DEPTH_CHECK)\n    temp = compressedAttribute3.w;\n    temp = temp * SHIFT_RIGHT12;\n\n    vec2 dimensions;\n    dimensions.y = (temp - floor(temp)) * SHIFT_LEFT12;\n    dimensions.x = floor(temp);\n#endif\n\n#ifdef ALIGNED_AXIS\n    vec3 alignedAxis = czm_octDecode(floor(compressedAttribute1.y * SHIFT_RIGHT8));\n    temp = compressedAttribute2.z * SHIFT_RIGHT5;\n    bool validAlignedAxis = (temp - floor(temp)) * SHIFT_LEFT1 > 0.0;\n#else\n    vec3 alignedAxis = vec3(0.0);\n    bool validAlignedAxis = false;\n#endif\n\n    vec4 pickColor;\n    vec4 color;\n\n    temp = compressedAttribute2.y;\n    temp = temp * SHIFT_RIGHT8;\n    pickColor.b = (temp - floor(temp)) * SHIFT_LEFT8;\n    temp = floor(temp) * SHIFT_RIGHT8;\n    pickColor.g = (temp - floor(temp)) * SHIFT_LEFT8;\n    pickColor.r = floor(temp);\n\n    temp = compressedAttribute2.x;\n    temp = temp * SHIFT_RIGHT8;\n    color.b = (temp - floor(temp)) * SHIFT_LEFT8;\n    temp = floor(temp) * SHIFT_RIGHT8;\n    color.g = (temp - floor(temp)) * SHIFT_LEFT8;\n    color.r = floor(temp);\n\n    temp = compressedAttribute2.z * SHIFT_RIGHT8;\n    bool sizeInMeters = floor((temp - floor(temp)) * SHIFT_LEFT7) > 0.0;\n    temp = floor(temp) * SHIFT_RIGHT8;\n\n    pickColor.a = (temp - floor(temp)) * SHIFT_LEFT8;\n    pickColor /= 255.0;\n\n    color.a = floor(temp);\n    color /= 255.0;\n\n    ///////////////////////////////////////////////////////////////////////////\n\n    vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);\n    vec4 positionEC = czm_modelViewRelativeToEye * p;\n\n#if defined(FRAGMENT_DEPTH_CHECK) || defined(VERTEX_DEPTH_CHECK)\n    float eyeDepth = positionEC.z;\n#endif\n\n    positionEC = czm_eyeOffset(positionEC, eyeOffset.xyz);\n    positionEC.xyz *= show;\n\n    ///////////////////////////////////////////////////////////////////////////\n\n#if defined(EYE_DISTANCE_SCALING) || defined(EYE_DISTANCE_TRANSLUCENCY) || defined(EYE_DISTANCE_PIXEL_OFFSET) || defined(DISTANCE_DISPLAY_CONDITION) || defined(DISABLE_DEPTH_DISTANCE)\n    float lengthSq;\n    if (czm_sceneMode == czm_sceneMode2D)\n    {\n        // 2D camera distance is a special case\n        // treat all billboards as flattened to the z=0.0 plane\n        lengthSq = czm_eyeHeight2D.y;\n    }\n    else\n    {\n        lengthSq = dot(positionEC.xyz, positionEC.xyz);\n    }\n#endif\nlengthSq = dot(positionEC.xyz, positionEC.xyz);\n#ifdef EYE_DISTANCE_SCALING\n    float distanceScale = czm_nearFarScalar(scaleByDistance, lengthSq);\n    float smoothScale = smoothstep(u_showRatio + 20.0, u_showRatio, showRatio);\n\n    scale *= distanceScale * smoothScale;\n    translate *= distanceScale * smoothScale;\n    // push vertex behind near plane for clipping\n    if (scale == 0.0)\n    {\n        positionEC.xyz = vec3(0.0);\n    }\n#endif\n\n    float translucency = 1.0;\n#ifdef EYE_DISTANCE_TRANSLUCENCY\n    translucency = czm_nearFarScalar(translucencyByDistance, lengthSq);\n    // push vertex behind near plane for clipping\n    if (translucency == 0.0)\n    {\n        positionEC.xyz = vec3(0.0);\n    }\n#endif\n\n#ifdef EYE_DISTANCE_PIXEL_OFFSET\n    float pixelOffsetScale = czm_nearFarScalar(pixelOffsetScaleByDistance, lengthSq);\n    pixelOffset *= pixelOffsetScale;\n#endif\n\n#ifdef DISTANCE_DISPLAY_CONDITION\n    float nearSq = compressedAttribute3.x;\n    float farSq = compressedAttribute3.y;\n    if (lengthSq < nearSq || lengthSq > farSq)\n    {\n        positionEC.xyz = vec3(0.0);\n    }\n#endif\n\n    mat2 rotationMatrix;\n    float mpp;\n\n#ifdef DISABLE_DEPTH_DISTANCE\n    float disableDepthTestDistance = compressedAttribute3.z;\n#endif\n\n#ifdef VERTEX_DEPTH_CHECK\nif (lengthSq < disableDepthTestDistance) {\n    float depthsilon = 10.0;\n\n    vec2 labelTranslate = textureCoordinateBoundsOrLabelTranslate.xy;\n    vec4 pEC1 = addScreenSpaceOffset(positionEC, dimensions, scale, vec2(0.0), origin, labelTranslate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);\n    float globeDepth1 = getGlobeDepth(pEC1);\n\n    if (globeDepth1 != 0.0 && pEC1.z + depthsilon < globeDepth1)\n    {\n        vec4 pEC2 = addScreenSpaceOffset(positionEC, dimensions, scale, vec2(0.0, 1.0), origin, labelTranslate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);\n        float globeDepth2 = getGlobeDepth(pEC2);\n\n        if (globeDepth2 != 0.0 && pEC2.z + depthsilon < globeDepth2)\n        {\n            vec4 pEC3 = addScreenSpaceOffset(positionEC, dimensions, scale, vec2(1.0), origin, labelTranslate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);\n            float globeDepth3 = getGlobeDepth(pEC3);\n            if (globeDepth3 != 0.0 && pEC3.z + depthsilon < globeDepth3)\n            {\n                positionEC.xyz = vec3(0.0);\n            }\n        }\n    }\n}\n#endif\n    positionEC = addScreenSpaceOffset(positionEC, imageSize, scale, direction, origin, translate, pixelOffset, alignedAxis, validAlignedAxis, rotation, sizeInMeters, rotationMatrix, mpp);\n    gl_Position = czm_projection * positionEC;\n    v_textureCoordinates = textureCoordinates;\n\n#ifdef LOG_DEPTH\n    czm_vertexLogDepth();\n#endif\n\n#ifdef DISABLE_DEPTH_DISTANCE\n    if (disableDepthTestDistance == 0.0 && czm_minimumDisableDepthTestDistance != 0.0)\n    {\n        disableDepthTestDistance = czm_minimumDisableDepthTestDistance;\n    }\n\n    if (disableDepthTestDistance != 0.0)\n    {\n        // Don't try to \"multiply both sides\" by w.  Greater/less-than comparisons won't work for negative values of w.\n        float zclip = gl_Position.z / gl_Position.w;\n        bool clipped = (zclip < -1.0 || zclip > 1.0);\n        if (!clipped && (disableDepthTestDistance < 0.0 || (lengthSq > 0.0 && lengthSq < disableDepthTestDistance)))\n        {\n            // Position z on the near plane.\n            gl_Position.z = -gl_Position.w;\n#ifdef LOG_DEPTH\n            czm_vertexLogDepth(vec4(czm_currentFrustum.x));\n#endif\n        }\n    }\n#endif\n\n#ifdef FRAGMENT_DEPTH_CHECK\n    if (sizeInMeters) {\n        translate /= mpp;\n        dimensions /= mpp;\n        imageSize /= mpp;\n    }\n\n#if defined(ROTATION) || defined(ALIGNED_AXIS)\n    v_rotationMatrix = rotationMatrix;\n#else\n    v_rotationMatrix = mat2(1.0, 0.0, 0.0, 1.0);\n#endif\n\n    float enableDepthCheck = 0.0;\n    if (lengthSq < disableDepthTestDistance)\n    {\n        enableDepthCheck = 1.0;\n    }\n\n    float dw = floor(clamp(dimensions.x, 0.0, SHIFT_LEFT12));\n    float dh = floor(clamp(dimensions.y, 0.0, SHIFT_LEFT12));\n\n    float iw = floor(clamp(imageSize.x, 0.0, SHIFT_LEFT12));\n    float ih = floor(clamp(imageSize.y, 0.0, SHIFT_LEFT12));\n\n    v_compressed.x = eyeDepth;\n    v_compressed.y = applyTranslate * SHIFT_LEFT1 + enableDepthCheck;\n    v_compressed.z = dw * SHIFT_LEFT12 + dh;\n    v_compressed.w = iw * SHIFT_LEFT12 + ih;\n    v_originTextureCoordinateAndTranslate.xy = depthOrigin;\n    v_originTextureCoordinateAndTranslate.zw = translate;\n    v_textureCoordinateBounds = textureCoordinateBoundsOrLabelTranslate;\n\n#endif\n\n#ifdef SDF\n    vec4 outlineColor;\n    float outlineWidth;\n\n    temp = sdf.x;\n    temp = temp * SHIFT_RIGHT8;\n    outlineColor.b = (temp - floor(temp)) * SHIFT_LEFT8;\n    temp = floor(temp) * SHIFT_RIGHT8;\n    outlineColor.g = (temp - floor(temp)) * SHIFT_LEFT8;\n    outlineColor.r = floor(temp);\n\n    temp = sdf.y;\n    temp = temp * SHIFT_RIGHT8;\n    float temp3 = (temp - floor(temp)) * SHIFT_LEFT8;\n    temp = floor(temp) * SHIFT_RIGHT8;\n    outlineWidth = (temp - floor(temp)) * SHIFT_LEFT8;\n    outlineColor.a = floor(temp);\n    outlineColor /= 255.0;\n\n    v_outlineWidth = outlineWidth / 255.0;\n    v_outlineColor = outlineColor;\n#endif\n\n    v_pickColor = pickColor;\n\n    v_color = color;\n    v_color.a *= translucency;\n\n}\n",X='#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\nuniform sampler2D u_atlas;\n\n#ifdef VECTOR_TILE\nuniform vec4 u_highlightColor;\n#endif\n\nvarying vec2 v_textureCoordinates;\nvarying vec4 v_pickColor;\nvarying vec4 v_color;\n\n#ifdef SDF\nvarying vec4 v_outlineColor;\nvarying float v_outlineWidth;\n#endif\n\n#ifdef FRAGMENT_DEPTH_CHECK\nvarying vec4 v_textureCoordinateBounds;                  // the min and max x and y values for the texture coordinates\nvarying vec4 v_originTextureCoordinateAndTranslate;      // texture coordinate at the origin, billboard translate (used for label glyphs)\nvarying vec4 v_compressed;                               // x: eyeDepth, y: applyTranslate & enableDepthCheck, z: dimensions, w: imageSize\nvarying mat2 v_rotationMatrix;\n\nconst float SHIFT_LEFT12 = 4096.0;\nconst float SHIFT_LEFT1 = 2.0;\n\nconst float SHIFT_RIGHT12 = 1.0 / 4096.0;\nconst float SHIFT_RIGHT1 = 1.0 / 2.0;\n\nfloat getGlobeDepth(vec2 adjustedST, vec2 depthLookupST, bool applyTranslate, vec2 dimensions, vec2 imageSize)\n{\n    vec2 lookupVector = imageSize * (depthLookupST - adjustedST);\n    lookupVector = v_rotationMatrix * lookupVector;\n    vec2 labelOffset = (dimensions - imageSize) * (depthLookupST - vec2(0.0, v_originTextureCoordinateAndTranslate.y)); // aligns label glyph with bounding rectangle.  Will be zero for billboards because dimensions and imageSize will be equal\n\n    vec2 translation = v_originTextureCoordinateAndTranslate.zw;\n\n    if (applyTranslate)\n    {\n        // this is only needed for labels where the horizontal origin is not LEFT\n        // it moves the label back to where the "origin" should be since all label glyphs are set to HorizontalOrigin.LEFT\n        translation += (dimensions * v_originTextureCoordinateAndTranslate.xy * vec2(1.0, 0.0));\n    }\n\n    vec2 st = ((lookupVector - translation + labelOffset) + gl_FragCoord.xy) / czm_viewport.zw;\n    float logDepthOrDepth = czm_unpackDepth(texture2D(czm_globeDepthTexture, st));\n\n    if (logDepthOrDepth == 0.0)\n    {\n        return 0.0; // not on the globe\n    }\n\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);\n    return eyeCoordinate.z / eyeCoordinate.w;\n}\n#endif\n\n\n#ifdef SDF\n\n// Get the distance from the edge of a glyph at a given position sampling an SDF texture.\nfloat getDistance(vec2 position)\n{\n    return texture2D(u_atlas, position).r;\n}\n\n// Samples the sdf texture at the given position and produces a color based on the fill color and the outline.\nvec4 getSDFColor(vec2 position, float outlineWidth, vec4 outlineColor, float smoothing)\n{\n    float distance = getDistance(position);\n\n    if (outlineWidth > 0.0)\n    {\n        // Don\'t get the outline edge exceed the SDF_EDGE\n        float outlineEdge = clamp(SDF_EDGE - outlineWidth, 0.0, SDF_EDGE);\n        float outlineFactor = smoothstep(SDF_EDGE - smoothing, SDF_EDGE + smoothing, distance);\n        vec4 sdfColor = mix(outlineColor, v_color, outlineFactor);\n        float alpha = smoothstep(outlineEdge - smoothing, outlineEdge + smoothing, distance);\n        return vec4(sdfColor.rgb, sdfColor.a * alpha);\n    }\n    else\n    {\n        float alpha = smoothstep(SDF_EDGE - smoothing, SDF_EDGE + smoothing, distance);\n        return vec4(v_color.rgb, v_color.a * alpha);\n    }\n}\n#endif\n\nvoid main()\n{\n    vec4 color = texture2D(u_atlas, v_textureCoordinates);\n\n#ifdef SDF\n    float outlineWidth = v_outlineWidth;\n    vec4 outlineColor = v_outlineColor;\n\n    // Get the current distance\n    float distance = getDistance(v_textureCoordinates);\n\n#ifdef GL_OES_standard_derivatives\n    float smoothing = fwidth(distance);\n    // Get an offset that is approximately half the distance to the neighbor pixels\n    // 0.354 is approximately half of 1/sqrt(2)\n    vec2 sampleOffset = 0.354 * vec2(dFdx(v_textureCoordinates) + dFdy(v_textureCoordinates));\n\n    // Sample the center point\n    vec4 center = getSDFColor(v_textureCoordinates, outlineWidth, outlineColor, smoothing);\n\n    // Sample the 4 neighbors\n    vec4 color1 = getSDFColor(v_textureCoordinates + vec2(sampleOffset.x, sampleOffset.y), outlineWidth, outlineColor, smoothing);\n    vec4 color2 = getSDFColor(v_textureCoordinates + vec2(-sampleOffset.x, sampleOffset.y), outlineWidth, outlineColor, smoothing);\n    vec4 color3 = getSDFColor(v_textureCoordinates + vec2(-sampleOffset.x, -sampleOffset.y), outlineWidth, outlineColor, smoothing);\n    vec4 color4 = getSDFColor(v_textureCoordinates + vec2(sampleOffset.x, -sampleOffset.y), outlineWidth, outlineColor, smoothing);\n\n    // Equally weight the center sample and the 4 neighboring samples\n    color = (center + color1 + color2 + color3 + color4)/5.0;\n#else\n    // Just do a single sample\n    float smoothing = 1.0/32.0;\n    color = getSDFColor(v_textureCoordinates, outlineWidth, outlineColor, smoothing);\n#endif\n\n    color = czm_gammaCorrect(color);\n#else\n    color = czm_gammaCorrect(color);\n    color *= czm_gammaCorrect(v_color);\n#endif\n\n// Fully transparent parts of the billboard are not pickable.\n#if !defined(OPAQUE) && !defined(TRANSLUCENT)\n    if (color.a < 0.005)   // matches 0/255 and 1/255\n    {\n        discard;\n    }\n#else\n// The billboard is rendered twice. The opaque pass discards translucent fragments\n// and the translucent pass discards opaque fragments.\n#ifdef OPAQUE\n    if (color.a < 0.995)   // matches < 254/255\n    {\n        discard;\n    }\n#else\n    if (color.a >= 0.995)  // matches 254/255 and 255/255\n    {\n        discard;\n    }\n#endif\n#endif\n\n#ifdef VECTOR_TILE\n    color *= u_highlightColor;\n#endif\n    gl_FragColor = color;\n\n    czm_writeLogDepth();\n\n#ifdef FRAGMENT_DEPTH_CHECK\n    float temp = v_compressed.y;\n\n    temp = temp * SHIFT_RIGHT1;\n\n    float temp2 = (temp - floor(temp)) * SHIFT_LEFT1;\n    bool enableDepthTest = temp2 != 0.0;\n    bool applyTranslate = floor(temp) != 0.0;\n\n    if (enableDepthTest) {\n        temp = v_compressed.z;\n        temp = temp * SHIFT_RIGHT12;\n\n        vec2 dimensions;\n        dimensions.y = (temp - floor(temp)) * SHIFT_LEFT12;\n        dimensions.x = floor(temp);\n\n        temp = v_compressed.w;\n        temp = temp * SHIFT_RIGHT12;\n\n        vec2 imageSize;\n        imageSize.y = (temp - floor(temp)) * SHIFT_LEFT12;\n        imageSize.x = floor(temp);\n\n        vec2 adjustedST = v_textureCoordinates - v_textureCoordinateBounds.xy;\n        adjustedST = adjustedST / vec2(v_textureCoordinateBounds.z - v_textureCoordinateBounds.x, v_textureCoordinateBounds.w - v_textureCoordinateBounds.y);\n\n        float epsilonEyeDepth = v_compressed.x + czm_epsilon1;\n        float globeDepth1 = getGlobeDepth(adjustedST, v_originTextureCoordinateAndTranslate.xy, applyTranslate, dimensions, imageSize);\n\n        // negative values go into the screen\n        if (globeDepth1 != 0.0 && globeDepth1 > epsilonEyeDepth)\n        {\n            float globeDepth2 = getGlobeDepth(adjustedST, vec2(0.0, 1.0), applyTranslate, dimensions, imageSize); // top left corner\n            if (globeDepth2 != 0.0 && globeDepth2 > epsilonEyeDepth)\n            {\n                float globeDepth3 = getGlobeDepth(adjustedST, vec2(1.0, 1.0), applyTranslate, dimensions, imageSize); // top right corner\n                if (globeDepth3 != 0.0 && globeDepth3 > epsilonEyeDepth)\n                {\n                    discard;\n                }\n            }\n        }\n    }\n#endif\n\n}\n',K=[],g(this._batchTable)&&(K.push("VECTOR_TILE"),q=this._batchTable.getVertexShaderCallback(!1,"a_batchId",void 0)(q),X=this._batchTable.getFragmentShaderCallback(!1,void 0)(X)),j=new H({defines:K,sources:[q]}),this._instanced&&j.defines.push("INSTANCED"),this._shaderRotation&&j.defines.push("ROTATION"),this._shaderAlignedAxis&&j.defines.push("ALIGNED_AXIS"),this._shaderScaleByDistance&&j.defines.push("EYE_DISTANCE_SCALING"),this._shaderTranslucencyByDistance&&j.defines.push("EYE_DISTANCE_TRANSLUCENCY"),this._shaderPixelOffsetScaleByDistance&&j.defines.push("EYE_DISTANCE_PIXEL_OFFSET"),this._shaderDistanceDisplayCondition&&j.defines.push("DISTANCE_DISPLAY_CONDITION"),this._shaderDisableDepthDistance&&j.defines.push("DISABLE_DEPTH_DISTANCE"),this._shaderClampToGround&&($?j.defines.push("VERTEX_DEPTH_CHECK"):j.defines.push("FRAGMENT_DEPTH_CHECK"));var ee=1-N.CUTOFF;this._sdf&&j.defines.push("SDF");var te=g(this._batchTable)?"VECTOR_TILE":"";this._blendOption===R.OPAQUE_AND_TRANSLUCENT&&(Y=new H({defines:["OPAQUE",te],sources:[X]}),this._shaderClampToGround&&($?Y.defines.push("VERTEX_DEPTH_CHECK"):Y.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(Y.defines.push("SDF"),Y.defines.push("SDF_EDGE "+ee)),this._sp=z.replaceCache({context:n,shaderProgram:this._sp,vertexShaderSource:j,fragmentShaderSource:Y,attributeLocations:gi}),Y=new H({defines:["TRANSLUCENT",te],sources:[X]}),this._shaderClampToGround&&($?Y.defines.push("VERTEX_DEPTH_CHECK"):Y.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(Y.defines.push("SDF"),Y.defines.push("SDF_EDGE "+ee)),this._spTranslucent=z.replaceCache({context:n,shaderProgram:this._spTranslucent,vertexShaderSource:j,fragmentShaderSource:Y,attributeLocations:gi})),this._blendOption===R.OPAQUE&&(Y=new H({defines:[te],sources:[X]}),this._shaderClampToGround&&($?Y.defines.push("VERTEX_DEPTH_CHECK"):Y.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(Y.defines.push("SDF"),Y.defines.push("SDF_EDGE "+ee)),this._sp=z.replaceCache({context:n,shaderProgram:this._sp,vertexShaderSource:j,fragmentShaderSource:Y,attributeLocations:gi})),this._blendOption===R.TRANSLUCENT&&(Y=new H({defines:[te],sources:[X]}),this._shaderClampToGround&&($?Y.defines.push("VERTEX_DEPTH_CHECK"):Y.defines.push("FRAGMENT_DEPTH_CHECK")),this._sdf&&(Y.defines.push("SDF"),Y.defines.push("SDF_EDGE "+ee)),this._spTranslucent=z.replaceCache({context:n,shaderProgram:this._spTranslucent,vertexShaderSource:j,fragmentShaderSource:Y,attributeLocations:gi})),this._compiledShaderRotation=this._shaderRotation,this._compiledShaderAlignedAxis=this._shaderAlignedAxis,this._compiledShaderScaleByDistance=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistance=this._shaderTranslucencyByDistance,this._compiledShaderPixelOffsetScaleByDistance=this._shaderPixelOffsetScaleByDistance,this._compiledShaderDistanceDisplayCondition=this._shaderDistanceDisplayCondition,this._compiledShaderDisableDepthDistance=this._shaderDisableDepthDistance,this._compiledShaderClampToGround=this._shaderClampToGround,this._compiledSDF=this._sdf}var ie=e.commandList;if(p.render||p.pick){var ne,oe=this._colorCommands,ae=this._blendOption===R.OPAQUE,se=this._blendOption===R.OPAQUE_AND_TRANSLUCENT,re=this._vaf.va,le=re.length,ce=this._uniforms;g(this._batchTable)?(ce=this._batchTable.getUniformMapCallback()(ce),ne=this._batchTable.getPickId()):ne="v_pickColor",oe.length=le;for(var de=se?2*le:le,he=0;he<de;++he){var me=oe[he];g(me)||(me=oe[he]=new L);var _e=ae||se&&he%2==0;me.pass=_e||!se?k.OPAQUE:k.TRANSLUCENT,me.owner=this;var pe=se?Math.floor(he/2):he;me.boundingVolume=V,me.modelMatrix=Z,me.count=re[pe].indicesCount,me.shaderProgram=_e?this._sp:this._spTranslucent,me.uniformMap=ce,me.vertexArray=re[pe].va,me.renderState=_e?this._rsOpaque:this._rsTranslucent,me.debugShowBoundingVolume=this.debugShowBoundingVolume,me.pickId=ne,this._instanced&&(me.count=6,me.instanceCount=i),ie.push(me)}}}}},Bi.prototype.isDestroyed=function(){return!1},Bi.prototype.destroy=function(){return g(this._removeCallbackFunc)&&(this._removeCallbackFunc(),this._removeCallbackFunc=void 0),this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._sp=this._sp&&this._sp.destroy(),this._spTranslucent=this._spTranslucent&&this._spTranslucent.destroy(),this._vaf=this._vaf&&this._vaf.destroy(),Ui(this._billboards),T(this)};const mn={markers:{near:5,nearScale:.8,far:5e6,farScale:.25,mediumPlaceTreshold:5,largePlaceTreshold:20,smallPlaceScale:.14,mediumPlaceScale:.27,largePlaceScale:.42,boostScale:1.5,globalScale:.5,inactiveColor:B.fromBytes(0,255,130,255),activeColor:new B(1,1,1,1)},baseColor:B.fromBytes(59,0,255,255)};const{near:_n,nearScale:pn,far:un,farScale:fn}=mn.markers,gn=new $(_n,pn,un,fn),Tn=_n*_n,vn=un*un;let Cn,En;const xn={image:(()=>{const e=document.createElement("canvas");e.width=100,e.height=100;const t=e.getContext("2d");return t&&(t.beginPath(),t.arc(50,50,50,0,2*Math.PI,!0),t.closePath(),t.fillStyle="#fff",t.fill()),e.toDataURL()})(),imageId:"circle",scale:1,scaleByDistance:gn,color:mn.markers.inactiveColor};function Sn(e,t,i,n,o,a=mn){const{largePlaceTreshold:s,mediumPlaceTreshold:r,boostScale:l,globalScale:c,largePlaceScale:d,mediumPlaceScale:h,smallPlaceScale:m}=a.markers,_=i?a.markers.activeColor:a.markers.inactiveColor;let p=e>s?d:e>r?h:m;return t&&p<=.25&&(p*=l),xn.scale=p*c,xn.color=_,xn.showRatio=o,n&&(xn.position=n),xn}r.prototype.simulateMouseWheel=function(e){var t=a.WHEEL,i=this._update;i[t]=!0;var n=this.getMovement(t),o=15*h.toRadians(e);c.clone(c.ZERO,n.startPosition),n.endPosition.x=0,n.endPosition.y=o,i[t]=!1};const bn=([e,t])=>i.fromDegrees(e,t),yn=new d,Dn=new c,In=new i,An=([,e,,t])=>e-t<40*(se.lastValue("media").$narrow?.7:1),Pn=([,e,,t],[,i,,n])=>e-t-(i-n),Rn=([,,,e],[,,,t])=>t-e,wn=([,,e])=>e;var Mn=new class extends oe{constructor(){super(...arguments),this.stopped=!1,this.markerByPlace={},this.markersPlaceIds=[],this.screenCenter=new c,this.externalMovement=!1,this.flying=!1,this.pinching=!1,this.mouseDown=!1,this.mouseMoveCreatedMovement=!1,this.moveCount=0,this.snapToActiveMarkerDebounced=ae((e=>{this.pinching||this.mouseDown||this.activeMarker&&this.closestMarkerToScreen&&this.activeMarker.id===this.closestMarkerToScreen.id&&!this.externalMovement&&!this.flying&&e&&this.activeMarker===e&&this.flyTo(e.geo,{duration:1.5,keepCameraHeight:!0,setFlying:!1})}),500),this.cameraWasMoving=!1,this.onTick=()=>{var e;if(this.stopped)return;this.widget.render();const t=!this.lastPosition.equals(this.position)&&i.distanceSquared(this.lastPosition,this.position)>1;this.position.clone(this.lastPosition),t?(this.cameraWasMoving||(this.cameraMovingDeferred=ve()),this.cameraWasMoving=!0,this.onCameraMove()):this.cameraWasMoving&&(null==(e=this.cameraMovingDeferred)||e.resolve(),this.onCameraMoveEnd(),this.cameraWasMoving=!1)},this.onCameraMove=()=>{const e=this.scene.screenSpaceCameraController;if((e.maxZoomReached||e.minZoomReached)&&(e.onZoomAvailable(),e.maxZoomReached=e.minZoomReached=!1),this.mouseMoveCreatedMovement){const e=this.closestMarkerToScreen=this.getClosestMarkerToScreenPosition(this.screenCenter);e&&this.changeActiveMarker(e)}},this.onCameraMoveEnd=()=>{this.pinching||this.snapToActiveMarkerDebounced(this.activeMarker)},this.onMouseLeave=()=>{this.highlightMarker(null,this.highlightEntity)}}initialize(e){se.on("blur-viewer",(()=>{this.mouseMoveCreatedMovement=!1})),this.closestMarkerToScreen=void 0;const t=this.widget=function(e){const t=document.getElementById(e),n=document.createElement("div");n.className="cesium-widget",t.appendChild(n);const o=function(){const e=document.createElement("canvas");e.addEventListener(pe?"pointerdown":ue?"mousedown":"touchstart",(()=>ne())),J.supportsImageRenderingPixelated()&&(e.style.imageRendering=J.imageRenderingValue());const t=()=>!1;return e.oncontextmenu=t,e.onselectstart=t,n.appendChild(e),e}();let a=!1,s=!1,r=new j({canvas:o,contextOptions:{webgl:{alpha:!1,preserveDrawingBuffer:!1}},scene3DOnly:!0,requestRenderMode:!he,maximumRenderTimeChange:1/0});return r.backgroundColor=B.fromCssColorString("#3b00ff"),r.camera.constrainedAxis=i.UNIT_Z,l(),r.globe=(()=>{const e=new Y;return e.showGroundAtmosphere=!1,e.baseColor=mn.baseColor,e})(),r.imageryLayers.addImageryProvider(new K({url:me?"http://abc":"https://rgmt.b-cdn.net/{z}/{x}/{y}.jpg",tileWidth:512,tileHeight:512,maximumLevel:13})),r.renderError.addEventListener(console.log),{screenSpaceEventHandler:new Q(o),scene:r,canvas:o,container:t,forceResize:()=>{s=!0},destroy:()=>{r.destroy(),t.removeChild(n)},render:()=>{s&&(s=!1,l(),r.requestRender()),a&&(r.initializeFrame(),r.render())}};function l(){let{clientWidth:e,clientHeight:t}=o;const i=_e.get("pixel-ratio"),n=i?Number(i):2===fe.tier?Math.min(2,window.devicePixelRatio):3===fe.tier?Math.min(3,window.devicePixelRatio):1;if(r.pixelRatio=n,e=o.width=e*n,t=o.height=t*n,a=0!==e&&0!==t,a){const{frustum:i}=r.camera;i.aspectRatio?i.aspectRatio=e/t:(i.top=i.right*(t/e),i.bottom=-i.top)}}}(e);this.scene=t.scene;const n=this.camera=t.scene.camera;n.setView({destination:new i(7383326.785028172,9419480.707813196,14989893.080210578)}),se.lastValue("media").$narrow&&n.zoomIn(35e5),this.position=this.camera.positionWC,this.lastPosition=new i,this.createCameraController(),ie.add(this.onTick);const o=this.scene.primitives.add(new ee({blendOption:R.TRANSLUCENT}));o.allowPicking=!1,this.activeEntity=o.add(Sn(1,!0,!0)),this.highlightEntity=o.add(Sn(1,!0,!0));const a=new i(0,0,-1e3);this.activeEntity.eyeOffset=a,this.highlightEntity.eyeOffset=a;const s=t.canvas.parentNode,r=()=>{this.stopped&&!Te&&s.classList.remove("cesium-resizing"),this.stopped=!1,t.forceResize();const{offsetWidth:e,offsetHeight:i}=s;this.screenCenter.x=.5*e,this.screenCenter.y=.5*i};r(),se.on("window-will-resize",(()=>{this.stopped||Te||s.classList.add("cesium-resizing"),this.stopped=!0})),se.on("window-resize-debounced",r),t.container.addEventListener("mouseleave",this.onMouseLeave),this.billboards=new Bi({blendOption:R.TRANSLUCENT}),this.billboards.allowPicking=!1,this.highlightMarker(null,this.activeEntity),this.highlightMarker(null,this.highlightEntity),this.scene.debugShowFramesPerSecond=he}installInputHandlers(){for(const[e,t]of[["LEFT_UP",this.onMouseUp],["LEFT_DOWN",this.onMouseDown],["MOUSE_MOVE",this.onMouseMove],["PINCH_START",this.onPinchStart],["PINCH_END",this.onPinchEnd],["LEFT_CLICK",this.onMouseClick],["WHEEL",this.onScrollWheel]])this.widget.screenSpaceEventHandler.setInputAction(t.bind(this),te[e])}onMouseDown(){this.highlightMarker(null,this.highlightEntity),this.camera.cancelFlight(),this.mouseDown=!0,this.externalMovement=!1}onMouseUp(){this.mouseDown=!1,ne(!1),this.flying||this.onCameraMoveEnd(),this.moveCount=0}onScrollWheel(){this.camera.cancelFlight()}onMouseMove(e){var t;this.mouseDown?(this.moveCount+=1,1===this.moveCount&&re.player.lock(),this.mouseMoveCreatedMovement=!0,this.flying=!1):(this.closestMarker=this.getClosestMarkerToScreenPosition(e.endPosition),this.highlightMarker(this.closestMarker||this.activeMarker,this.highlightEntity),ue&&(t=this.closestMarker?"pointer":"",ln!==t&&(ln=t,ie.next(hn))))}onMouseClick({position:e}){const t=this.pickEllipsoid(e),i=this.getClosestMarkerToScreenPosition(e);if(!i)return;let n;if(i)n=i.geo;else{if(!t)return;const{longitude:e,latitude:i}=this.cartesianToCartographic(t);n=[Ee(e),Ee(i)]}this.changeActiveMarker(i,!1),this.flyTo(n,{duration:.001*le}),this.emit("place-clicked",null==i?void 0:i.id)}onPinchStart(){this.pinching=!0}onPinchEnd(){this.pinching=!1}highlightMarker(e,t){if(e!==this.lastMarker){if(e){const{entity:i}=e;if(!i)return;t.show=!0,t.position=i.position,t.scale=i.scale}else t.show=!1;this.lastMarker=e,this.scene.requestRender()}}createCameraController(){const e=this.scene=this.widget.scene,{maxZoomReached:t,minZoomReached:i}=e.screenSpaceCameraController;e.screenSpaceCameraController.destroy();const n=this.cameraController=e._screenSpaceCameraController=new xe(e,{onMaxZoomReached:()=>this.emit("max-zoom-reached"),onMinZoomReached:()=>this.emit("min-zoom-reached"),onZoomAvailable:()=>this.emit("zoom-available")});n.maximumZoomDistance=2e7,n.minimumZoomDistance=6e3,n.enableTilt=!1,n.minZoomReached=i,n.maxZoomReached=t,n.getZoomPosition=()=>(this.camera.cancelFlight(),this.activeMarker?this.activeMarker.cartesian:this.position),n.getZoomCartesian3=()=>{const{activeMarker:e,screenCenter:t}=this;return e&&c.distance(this.cartesianToWindowCoordinates(e.cartesian),t)>40?this.pickEllipsoid(this.screenCenter):null==e?void 0:e.cartesian}}async zoomInToGeoWhileRevealingMarkers(e){this.teleportTo(e),await ge(me?0:300);const t=Date.now(),i=()=>{this.scene.requestRender();var e;1===(this.billboards.showRatio=me?1:(e=Math.min(1,(Date.now()-t)/1e3))*e)&&ie.remove(i)};ie.add(i),await ge(me?0:400)}async revealMarkersWhileRotatingGlobe(){this.scene.requestRender();const e=Date.now(),t=me?10:8e3,i=me?5:5500,n=o=>{const a=Date.now()-e;a<i&&(this.camera.rotateLeft(5e-4*o),this.camera.zoomOut(500*o)),a>t&&ie.remove(n),this.billboards.showRatio=Math.min(1,(Date.now()-e)/t)};ie.add(n),await ge(i)}async setMarkers({byId:e,ids:t},{repeatVisitor:i=!1,config:n}={}){let o=Date.now();const a=me?Number.MAX_VALUE:500,s=me?Number.MAX_VALUE:32,r=e=>{if(!(e%a!=0||Date.now()-o<s))return o=Date.now(),de()},{markerByPlace:l,billboards:c}=this;o=Date.now();for(let h=0;h<this.markersPlaceIds.length;h++){const e=r(h);e&&await e;const i=this.markersPlaceIds[h];-1===t.indexOf(i)&&(c.remove(l[i].entity),delete l[i])}this.markersPlaceIds=t,o=Date.now();for(let h=0;h<t.length;h++){const o=r(h);o&&await o;const a=t[h];if(l[a])continue;const s=e[a],d=s.geo,m=bn(d),_=(d[0]+180+90)%360/360,p=c.add(Sn(s.size,s.boost,!1,m,i?Math.random():Math.max(0,1-_+(.05*Math.random()-.025)),n));l[a]={geo:d,id:a,cartesian:m,entity:p}}const{primitives:d}=this.scene;d.contains(c)||d.add(c),this.scene.requestRender()}async gotoPlace(e,{teleport:t=!1,zoom:i=!0,duration:n,changeMarker:o,forceFlight:a}={}){const s=this.markerByPlace&&this.markerByPlace[e.id];!a&&this.mouseMoveCreatedMovement||await(t?i?this.teleportTo(e.geo):this.moveCameraTo(e.geo,111e4):this.flyTo(e.geo,n?{duration:n}:void 0)),s&&s===this.activeMarker||(this.externalMovement=!0,o&&this.changeActiveMarker(s,!1))}changeActiveMarker(e,t=!0){e!==this.activeMarker&&(this.activeMarker=e,this.highlightMarker(e,this.activeEntity),e&&t&&!this.flying&&!this.externalMovement&&this.emit("place-changed",e.id))}zoomIn(){this.scene._screenSpaceCameraController._aggregator.simulateMouseWheel(25)}zoomOut(){this.scene._screenSpaceCameraController._aggregator.simulateMouseWheel(-25)}getViewRectangle(){return this.camera.computeViewRectangle(this.scene.globe.ellipsoid)}globeDistanceFromCamera(){var e;const t=null==(e=this.camera)?void 0:e.position;return t?this.cartesianToCartographic(t).height:0}moveCameraTo([e,t],n=111e5){this.camera.setView({destination:i.fromDegrees(e,t,n)})}async flyCameraTo([e,t],n,o=111e4,a=!0){return new Promise((s=>{a&&(this.flying=!0),this.createCameraController(),this.camera.flyTo({destination:i.fromDegrees(e,t,o),duration:me?.01:n,complete:async()=>{var e;await(null==(e=this.cameraMovingDeferred)?void 0:e.promise),this.flying=!1,s()}})}))}async teleportTo(e,t=(me?.01:2.5)){return this.moveCameraTo(e),this.flyCameraTo(e,t)}async flyTo(e,{duration:t,keepCameraHeight:i,setFlying:n}={}){return this.flyCameraTo(e,t,i?this.globeDistanceFromCamera():Math.min(111e4,this.globeDistanceFromCamera()),n)}cartesianToCartographic(e,t=yn){return n.WGS84.cartesianToCartographic(e,t)}cartesianToWindowCoordinates(e,t=Dn){return v.wgs84ToWindowCoordinates(this.scene,e,t)}pickEllipsoid(e,t=In){return this.camera.pickEllipsoid(e,this.scene.globe.ellipsoid,t)}getClosestMarkerToScreenPosition(e){const t=this.pickEllipsoid(e);if(!t)return null;const i=function(e){if(e!==Cn){let t=Math.pow((e*e-Tn)/(vn-Tn),.2);t=Math.max(0,Math.min(t,1)),Cn=e,En=pn*(1-t)+fn*t}return En}(this.globeDistanceFromCamera());let o=0;const a=n.WGS84.cartesianToCartographic(t,yn);a.longitude=Ee(a.longitude),a.latitude=Ee(a.latitude);const s=ce.lookupCartesian(a,30).map((t=>{const n=this.markerByPlace[t.id],a=this.cartesianToWindowCoordinates(n.cartesian),s=c.distance(a,e),r=n.entity.scale*i*50,l=s-r<=0;l&&o++;return[n,s,l,r]})).filter(An).sort(Pn);if(!s.length)return null;return(o>0?s.filter(wn).sort(Rn):s)[0][0]}};export{Mn as default};
